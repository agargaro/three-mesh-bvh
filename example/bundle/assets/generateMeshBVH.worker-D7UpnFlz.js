(function(){"use strict";/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */class $s{addEventListener(t,s){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(s)===-1&&i[t].push(s)}hasEventListener(t,s){const i=this._listeners;return i===void 0?!1:i[t]!==void 0&&i[t].indexOf(s)!==-1}removeEventListener(t,s){const i=this._listeners;if(i===void 0)return;const e=i[t];if(e!==void 0){const n=e.indexOf(s);n!==-1&&e.splice(n,1)}}dispatchEvent(t){const s=this._listeners;if(s===void 0)return;const i=s[t.type];if(i!==void 0){t.target=this;const e=i.slice(0);for(let n=0,r=e.length;n<r;n++)e[n].call(this,t);t.target=null}}}const O=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function xs(){const f=Math.random()*4294967295|0,t=Math.random()*4294967295|0,s=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(O[f&255]+O[f>>8&255]+O[f>>16&255]+O[f>>24&255]+"-"+O[t&255]+O[t>>8&255]+"-"+O[t>>16&15|64]+O[t>>24&255]+"-"+O[s&63|128]+O[s>>8&255]+"-"+O[s>>16&255]+O[s>>24&255]+O[i&255]+O[i>>8&255]+O[i>>16&255]+O[i>>24&255]).toLowerCase()}function R(f,t,s){return Math.max(t,Math.min(s,f))}function ts(f,t){switch(t.constructor){case Float32Array:return f;case Uint32Array:return f/4294967295;case Uint16Array:return f/65535;case Uint8Array:return f/255;case Int32Array:return Math.max(f/2147483647,-1);case Int16Array:return Math.max(f/32767,-1);case Int8Array:return Math.max(f/127,-1);default:throw new Error("Invalid component type.")}}function v(f,t){switch(t.constructor){case Float32Array:return f;case Uint32Array:return Math.round(f*4294967295);case Uint16Array:return Math.round(f*65535);case Uint8Array:return Math.round(f*255);case Int32Array:return Math.round(f*2147483647);case Int16Array:return Math.round(f*32767);case Int8Array:return Math.round(f*127);default:throw new Error("Invalid component type.")}}class W{constructor(t=0,s=0){W.prototype.isVector2=!0,this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,i=this.y,e=t.elements;return this.x=e[0]*s+e[3]*i+e[6],this.y=e[1]*s+e[4]*i+e[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=R(this.x,t.x,s.x),this.y=R(this.y,t.y,s.y),this}clampScalar(t,s){return this.x=R(this.x,t,s),this.y=R(this.y,t,s),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(R(i,t,s))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(s===0)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(R(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y;return s*s+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const i=Math.cos(s),e=Math.sin(s),n=this.x-t.x,r=this.y-t.y;return this.x=n*i-r*e+t.x,this.y=n*e+r*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ss{constructor(t=0,s=0,i=0,e=1){this.isQuaternion=!0,this._x=t,this._y=s,this._z=i,this._w=e}static slerpFlat(t,s,i,e,n,r,o){let a=i[e+0],h=i[e+1],c=i[e+2],u=i[e+3];const l=n[r+0],d=n[r+1],p=n[r+2],y=n[r+3];if(o===0){t[s+0]=a,t[s+1]=h,t[s+2]=c,t[s+3]=u;return}if(o===1){t[s+0]=l,t[s+1]=d,t[s+2]=p,t[s+3]=y;return}if(u!==y||a!==l||h!==d||c!==p){let x=1-o;const m=a*l+h*d+c*p+u*y,g=m>=0?1:-1,b=1-m*m;if(b>Number.EPSILON){const w=Math.sqrt(b),A=Math.atan2(w,m*g);x=Math.sin(x*A)/w,o=Math.sin(o*A)/w}const _=o*g;if(a=a*x+l*_,h=h*x+d*_,c=c*x+p*_,u=u*x+y*_,x===1-o){const w=1/Math.sqrt(a*a+h*h+c*c+u*u);a*=w,h*=w,c*=w,u*=w}}t[s]=a,t[s+1]=h,t[s+2]=c,t[s+3]=u}static multiplyQuaternionsFlat(t,s,i,e,n,r){const o=i[e],a=i[e+1],h=i[e+2],c=i[e+3],u=n[r],l=n[r+1],d=n[r+2],p=n[r+3];return t[s]=o*p+c*u+a*d-h*l,t[s+1]=a*p+c*l+h*u-o*d,t[s+2]=h*p+c*d+o*l-a*u,t[s+3]=c*p-o*u-a*l-h*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,i,e){return this._x=t,this._y=s,this._z=i,this._w=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s=!0){const i=t._x,e=t._y,n=t._z,r=t._order,o=Math.cos,a=Math.sin,h=o(i/2),c=o(e/2),u=o(n/2),l=a(i/2),d=a(e/2),p=a(n/2);switch(r){case"XYZ":this._x=l*c*u+h*d*p,this._y=h*d*u-l*c*p,this._z=h*c*p+l*d*u,this._w=h*c*u-l*d*p;break;case"YXZ":this._x=l*c*u+h*d*p,this._y=h*d*u-l*c*p,this._z=h*c*p-l*d*u,this._w=h*c*u+l*d*p;break;case"ZXY":this._x=l*c*u-h*d*p,this._y=h*d*u+l*c*p,this._z=h*c*p+l*d*u,this._w=h*c*u-l*d*p;break;case"ZYX":this._x=l*c*u-h*d*p,this._y=h*d*u+l*c*p,this._z=h*c*p-l*d*u,this._w=h*c*u+l*d*p;break;case"YZX":this._x=l*c*u+h*d*p,this._y=h*d*u+l*c*p,this._z=h*c*p-l*d*u,this._w=h*c*u-l*d*p;break;case"XZY":this._x=l*c*u-h*d*p,this._y=h*d*u-l*c*p,this._z=h*c*p+l*d*u,this._w=h*c*u+l*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return s===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const i=s/2,e=Math.sin(i);return this._x=t.x*e,this._y=t.y*e,this._z=t.z*e,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,i=s[0],e=s[4],n=s[8],r=s[1],o=s[5],a=s[9],h=s[2],c=s[6],u=s[10],l=i+o+u;if(l>0){const d=.5/Math.sqrt(l+1);this._w=.25/d,this._x=(c-a)*d,this._y=(n-h)*d,this._z=(r-e)*d}else if(i>o&&i>u){const d=2*Math.sqrt(1+i-o-u);this._w=(c-a)/d,this._x=.25*d,this._y=(e+r)/d,this._z=(n+h)/d}else if(o>u){const d=2*Math.sqrt(1+o-i-u);this._w=(n-h)/d,this._x=(e+r)/d,this._y=.25*d,this._z=(a+c)/d}else{const d=2*Math.sqrt(1+u-i-o);this._w=(r-e)/d,this._x=(n+h)/d,this._y=(a+c)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let i=t.dot(s)+1;return i<1e-8?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(R(this.dot(t),-1,1)))}rotateTowards(t,s){const i=this.angleTo(t);if(i===0)return this;const e=Math.min(1,s/i);return this.slerp(t,e),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const i=t._x,e=t._y,n=t._z,r=t._w,o=s._x,a=s._y,h=s._z,c=s._w;return this._x=i*c+r*o+e*h-n*a,this._y=e*c+r*a+n*o-i*h,this._z=n*c+r*h+i*a-e*o,this._w=r*c-i*o-e*a-n*h,this._onChangeCallback(),this}slerp(t,s){if(s===0)return this;if(s===1)return this.copy(t);const i=this._x,e=this._y,n=this._z,r=this._w;let o=r*t._w+i*t._x+e*t._y+n*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=r,this._x=i,this._y=e,this._z=n,this;const a=1-o*o;if(a<=Number.EPSILON){const d=1-s;return this._w=d*r+s*this._w,this._x=d*i+s*this._x,this._y=d*e+s*this._y,this._z=d*n+s*this._z,this.normalize(),this}const h=Math.sqrt(a),c=Math.atan2(h,o),u=Math.sin((1-s)*c)/h,l=Math.sin(s*c)/h;return this._w=r*u+this._w*l,this._x=i*u+this._x*l,this._y=e*u+this._y*l,this._z=n*u+this._z*l,this._onChangeCallback(),this}slerpQuaternions(t,s,i){return this.copy(t).slerp(s,i)}random(){const t=2*Math.PI*Math.random(),s=2*Math.PI*Math.random(),i=Math.random(),e=Math.sqrt(1-i),n=Math.sqrt(i);return this.set(e*Math.sin(t),e*Math.cos(t),n*Math.sin(s),n*Math.cos(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class M{constructor(t=0,s=0,i=0){M.prototype.isVector3=!0,this.x=t,this.y=s,this.z=i}set(t,s,i){return i===void 0&&(i=this.z),this.x=t,this.y=s,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return this.applyQuaternion(Ii.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(Ii.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,i=this.y,e=this.z,n=t.elements;return this.x=n[0]*s+n[3]*i+n[6]*e,this.y=n[1]*s+n[4]*i+n[7]*e,this.z=n[2]*s+n[5]*i+n[8]*e,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,n=t.elements,r=1/(n[3]*s+n[7]*i+n[11]*e+n[15]);return this.x=(n[0]*s+n[4]*i+n[8]*e+n[12])*r,this.y=(n[1]*s+n[5]*i+n[9]*e+n[13])*r,this.z=(n[2]*s+n[6]*i+n[10]*e+n[14])*r,this}applyQuaternion(t){const s=this.x,i=this.y,e=this.z,n=t.x,r=t.y,o=t.z,a=t.w,h=2*(r*e-o*i),c=2*(o*s-n*e),u=2*(n*i-r*s);return this.x=s+a*h+r*u-o*c,this.y=i+a*c+o*h-n*u,this.z=e+a*u+n*c-r*h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,i=this.y,e=this.z,n=t.elements;return this.x=n[0]*s+n[4]*i+n[8]*e,this.y=n[1]*s+n[5]*i+n[9]*e,this.z=n[2]*s+n[6]*i+n[10]*e,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=R(this.x,t.x,s.x),this.y=R(this.y,t.y,s.y),this.z=R(this.z,t.z,s.z),this}clampScalar(t,s){return this.x=R(this.x,t,s),this.y=R(this.y,t,s),this.z=R(this.z,t,s),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(R(i,t,s))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,s){const i=t.x,e=t.y,n=t.z,r=s.x,o=s.y,a=s.z;return this.x=e*a-n*o,this.y=n*r-i*a,this.z=i*o-e*r,this}projectOnVector(t){const s=t.lengthSq();if(s===0)return this.set(0,0,0);const i=t.dot(this)/s;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Hs.copy(this).projectOnVector(t),this.sub(Hs)}reflect(t){return this.sub(Hs.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(s===0)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(R(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y,e=this.z-t.z;return s*s+i*i+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,i){const e=Math.sin(s)*t;return this.x=e*Math.sin(i),this.y=Math.cos(s)*t,this.z=e*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,i){return this.x=t*Math.sin(s),this.y=i,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),e=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=i,this.z=e,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,s*4)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,s*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,s=Math.random()*2-1,i=Math.sqrt(1-s*s);return this.x=i*Math.cos(t),this.y=s,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Hs=new M,Ii=new ss;class Tt{constructor(t,s,i,e,n,r,o,a,h){Tt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,s,i,e,n,r,o,a,h)}set(t,s,i,e,n,r,o,a,h){const c=this.elements;return c[0]=t,c[1]=e,c[2]=o,c[3]=s,c[4]=n,c[5]=a,c[6]=i,c[7]=r,c[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],this}extractBasis(t,s,i){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,n=this.elements,r=i[0],o=i[3],a=i[6],h=i[1],c=i[4],u=i[7],l=i[2],d=i[5],p=i[8],y=e[0],x=e[3],m=e[6],g=e[1],b=e[4],_=e[7],w=e[2],A=e[5],z=e[8];return n[0]=r*y+o*g+a*w,n[3]=r*x+o*b+a*A,n[6]=r*m+o*_+a*z,n[1]=h*y+c*g+u*w,n[4]=h*x+c*b+u*A,n[7]=h*m+c*_+u*z,n[2]=l*y+d*g+p*w,n[5]=l*x+d*b+p*A,n[8]=l*m+d*_+p*z,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[1],e=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],c=t[8];return s*r*c-s*o*h-i*n*c+i*o*a+e*n*h-e*r*a}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],c=t[8],u=c*r-o*h,l=o*a-c*n,d=h*n-r*a,p=s*u+i*l+e*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/p;return t[0]=u*y,t[1]=(e*h-c*i)*y,t[2]=(o*i-e*r)*y,t[3]=l*y,t[4]=(c*s-e*a)*y,t[5]=(e*n-o*s)*y,t[6]=d*y,t[7]=(i*a-h*s)*y,t[8]=(r*s-i*n)*y,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,i,e,n,r,o){const a=Math.cos(n),h=Math.sin(n);return this.set(i*a,i*h,-i*(a*r+h*o)+r+t,-e*h,e*a,-e*(-h*r+a*o)+o+s,0,0,1),this}scale(t,s){return this.premultiply(Js.makeScale(t,s)),this}rotate(t){return this.premultiply(Js.makeRotation(-t)),this}translate(t,s){return this.premultiply(Js.makeTranslation(t,s)),this}makeTranslation(t,s){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,s,0,0,1),this}makeRotation(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,-i,0,i,s,0,0,0,1),this}makeScale(t,s){return this.set(t,0,0,0,s,0,0,0,1),this}equals(t){const s=this.elements,i=t.elements;for(let e=0;e<9;e++)if(s[e]!==i[e])return!1;return!0}fromArray(t,s=0){for(let i=0;i<9;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Js=new Tt;function ue(f){for(let t=f.length-1;t>=0;--t)if(f[t]>=65535)return!0;return!1}function Vi(f){return document.createElementNS("http://www.w3.org/1999/xhtml",f)}function js(f){return f<.04045?f*.0773993808:Math.pow(f*.9478672986+.0521327014,2.4)}let Ut;class fe{static getDataURL(t,s="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let i;if(t instanceof HTMLCanvasElement)i=t;else{Ut===void 0&&(Ut=Vi("canvas")),Ut.width=t.width,Ut.height=t.height;const e=Ut.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),i=Ut}return i.toDataURL(s)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const s=Vi("canvas");s.width=t.width,s.height=t.height;const i=s.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const e=i.getImageData(0,0,t.width,t.height),n=e.data;for(let r=0;r<n.length;r++)n[r]=js(n[r]/255)*255;return i.putImageData(e,0,0),s}else if(t.data){const s=t.data.slice(0);for(let i=0;i<s.length;i++)s instanceof Uint8Array||s instanceof Uint8ClampedArray?s[i]=Math.floor(js(s[i]/255)*255):s[i]=js(s[i]);return{data:s,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let de=0;class pe{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:de++}),this.uuid=xs(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const s=this.data;return s instanceof HTMLVideoElement?t.set(s.videoWidth,s.videoHeight,0):s instanceof VideoFrame?t.set(s.displayHeight,s.displayWidth,0):s!==null?t.set(s.width,s.height,s.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const s=t===void 0||typeof t=="string";if(!s&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},e=this.data;if(e!==null){let n;if(Array.isArray(e)){n=[];for(let r=0,o=e.length;r<o;r++)e[r].isDataTexture?n.push(Gs(e[r].image)):n.push(Gs(e[r]))}else n=Gs(e);i.url=n}return s||(t.images[this.uuid]=i),i}}function Gs(f){return typeof HTMLImageElement<"u"&&f instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&f instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&f instanceof ImageBitmap?fe.getDataURL(f):f.data?{data:Array.from(f.data),width:f.width,height:f.height,type:f.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ye=0;const Qs=new M;class Bt extends $s{constructor(t=Bt.DEFAULT_IMAGE,s=Bt.DEFAULT_MAPPING,i=1001,e=1001,n=1006,r=1008,o=1023,a=1009,h=Bt.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ye++}),this.uuid=xs(),this.name="",this.source=new pe(t),this.mipmaps=[],this.mapping=s,this.channel=0,this.wrapS=i,this.wrapT=e,this.magFilter=n,this.minFilter=r,this.anisotropy=h,this.format=o,this.internalFormat=null,this.type=a,this.offset=new W(0,0),this.repeat=new W(1,1),this.center=new W(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Tt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Qs).x}get height(){return this.source.getSize(Qs).y}get depth(){return this.source.getSize(Qs).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,s){this.updateRanges.push({start:t,count:s})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const s in t){const i=t[s];if(i===void 0){console.warn(`THREE.Texture.setValues(): parameter '${s}' has value of undefined.`);continue}const e=this[s];if(e===void 0){console.warn(`THREE.Texture.setValues(): property '${s}' does not exist.`);continue}e&&i&&e.isVector2&&i.isVector2||e&&i&&e.isVector3&&i.isVector3||e&&i&&e.isMatrix3&&i.isMatrix3?e.copy(i):this[s]=i}}toJSON(t){const s=t===void 0||typeof t=="string";if(!s&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),s||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}Bt.DEFAULT_IMAGE=null,Bt.DEFAULT_MAPPING=300,Bt.DEFAULT_ANISOTROPY=1;class is{constructor(t=0,s=0,i=0,e=1){is.prototype.isVector4=!0,this.x=t,this.y=s,this.z=i,this.w=e}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,s,i,e){return this.x=t,this.y=s,this.z=i,this.w=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;case 3:this.w=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this.w=t.w+s.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this.w=t.w-s.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,n=this.w,r=t.elements;return this.x=r[0]*s+r[4]*i+r[8]*e+r[12]*n,this.y=r[1]*s+r[5]*i+r[9]*e+r[13]*n,this.z=r[2]*s+r[6]*i+r[10]*e+r[14]*n,this.w=r[3]*s+r[7]*i+r[11]*e+r[15]*n,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const s=Math.sqrt(1-t.w*t.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/s,this.y=t.y/s,this.z=t.z/s),this}setAxisAngleFromRotationMatrix(t){let s,i,e,n;const a=t.elements,h=a[0],c=a[4],u=a[8],l=a[1],d=a[5],p=a[9],y=a[2],x=a[6],m=a[10];if(Math.abs(c-l)<.01&&Math.abs(u-y)<.01&&Math.abs(p-x)<.01){if(Math.abs(c+l)<.1&&Math.abs(u+y)<.1&&Math.abs(p+x)<.1&&Math.abs(h+d+m-3)<.1)return this.set(1,0,0,0),this;s=Math.PI;const b=(h+1)/2,_=(d+1)/2,w=(m+1)/2,A=(c+l)/4,z=(u+y)/4,S=(p+x)/4;return b>_&&b>w?b<.01?(i=0,e=.707106781,n=.707106781):(i=Math.sqrt(b),e=A/i,n=z/i):_>w?_<.01?(i=.707106781,e=0,n=.707106781):(e=Math.sqrt(_),i=A/e,n=S/e):w<.01?(i=.707106781,e=.707106781,n=0):(n=Math.sqrt(w),i=z/n,e=S/n),this.set(i,e,n,s),this}let g=Math.sqrt((x-p)*(x-p)+(u-y)*(u-y)+(l-c)*(l-c));return Math.abs(g)<.001&&(g=1),this.x=(x-p)/g,this.y=(u-y)/g,this.z=(l-c)/g,this.w=Math.acos((h+d+m-1)/2),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this.w=s[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,s){return this.x=R(this.x,t.x,s.x),this.y=R(this.y,t.y,s.y),this.z=R(this.z,t.z,s.z),this.w=R(this.w,t.w,s.w),this}clampScalar(t,s){return this.x=R(this.x,t,s),this.y=R(this.y,t,s),this.z=R(this.z,t,s),this.w=R(this.w,t,s),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(R(i,t,s))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this.w+=(t.w-this.w)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this.w=t.w+(s.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this.w=t[s+3],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t[s+3]=this.w,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this.w=t.getW(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class X{constructor(t=new M(1/0,1/0,1/0),s=new M(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=s}set(t,s){return this.min.copy(t),this.max.copy(s),this}setFromArray(t){this.makeEmpty();for(let s=0,i=t.length;s<i;s+=3)this.expandByPoint(et.fromArray(t,s));return this}setFromBufferAttribute(t){this.makeEmpty();for(let s=0,i=t.count;s<i;s++)this.expandByPoint(et.fromBufferAttribute(t,s));return this}setFromPoints(t){this.makeEmpty();for(let s=0,i=t.length;s<i;s++)this.expandByPoint(t[s]);return this}setFromCenterAndSize(t,s){const i=et.copy(s).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,s=!1){return this.makeEmpty(),this.expandByObject(t,s)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,s=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const n=i.getAttribute("position");if(s===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let r=0,o=n.count;r<o;r++)t.isMesh===!0?t.getVertexPosition(r,et):et.fromBufferAttribute(n,r),et.applyMatrix4(t.matrixWorld),this.expandByPoint(et);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),gs.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),gs.copy(i.boundingBox)),gs.applyMatrix4(t.matrixWorld),this.union(gs)}const e=t.children;for(let n=0,r=e.length;n<r;n++)this.expandByObject(e[n],s);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,s){return s.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,et),et.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let s,i;return t.normal.x>0?(s=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(s=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(s+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(s+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(s+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(s+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),s<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(es),ws.subVectors(this.max,es),kt.subVectors(t.a,es),It.subVectors(t.b,es),Vt.subVectors(t.c,es),gt.subVectors(It,kt),wt.subVectors(Vt,It),Pt.subVectors(kt,Vt);let s=[0,-gt.z,gt.y,0,-wt.z,wt.y,0,-Pt.z,Pt.y,gt.z,0,-gt.x,wt.z,0,-wt.x,Pt.z,0,-Pt.x,-gt.y,gt.x,0,-wt.y,wt.x,0,-Pt.y,Pt.x,0];return!Ks(s,kt,It,Vt,ws)||(s=[1,0,0,0,1,0,0,0,1],!Ks(s,kt,It,Vt,ws))?!1:(bs.crossVectors(gt,wt),s=[bs.x,bs.y,bs.z],Ks(s,kt,It,Vt,ws))}clampPoint(t,s){return s.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,et).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(et).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(ut[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ut[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ut[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ut[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ut[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ut[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ut[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ut[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ut),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const ut=[new M,new M,new M,new M,new M,new M,new M,new M],et=new M,gs=new X,kt=new M,It=new M,Vt=new M,gt=new M,wt=new M,Pt=new M,es=new M,ws=new M,bs=new M,Ct=new M;function Ks(f,t,s,i,e){for(let n=0,r=f.length-3;n<=r;n+=3){Ct.fromArray(f,n);const o=e.x*Math.abs(Ct.x)+e.y*Math.abs(Ct.y)+e.z*Math.abs(Ct.z),a=t.dot(Ct),h=s.dot(Ct),c=i.dot(Ct);if(Math.max(-Math.max(a,h,c),Math.min(a,h,c))>o)return!1}return!0}const me=new X,ns=new M,ti=new M;class Li{constructor(t=new M,s=-1){this.isSphere=!0,this.center=t,this.radius=s}set(t,s){return this.center.copy(t),this.radius=s,this}setFromPoints(t,s){const i=this.center;s!==void 0?i.copy(s):me.setFromPoints(t).getCenter(i);let e=0;for(let n=0,r=t.length;n<r;n++)e=Math.max(e,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(e),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const s=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=s*s}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,s){const i=this.center.distanceToSquared(t);return s.copy(t),i>this.radius*this.radius&&(s.sub(this.center).normalize(),s.multiplyScalar(this.radius).add(this.center)),s}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ns.subVectors(t,this.center);const s=ns.lengthSq();if(s>this.radius*this.radius){const i=Math.sqrt(s),e=(i-this.radius)*.5;this.center.addScaledVector(ns,e/i),this.radius+=e}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(ti.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ns.copy(t.center).add(ti)),this.expandByPoint(ns.copy(t.center).sub(ti))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}class D{constructor(t,s,i,e,n,r,o,a,h,c,u,l,d,p,y,x){D.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,s,i,e,n,r,o,a,h,c,u,l,d,p,y,x)}set(t,s,i,e,n,r,o,a,h,c,u,l,d,p,y,x){const m=this.elements;return m[0]=t,m[4]=s,m[8]=i,m[12]=e,m[1]=n,m[5]=r,m[9]=o,m[13]=a,m[2]=h,m[6]=c,m[10]=u,m[14]=l,m[3]=d,m[7]=p,m[11]=y,m[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new D().fromArray(this.elements)}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],s[9]=i[9],s[10]=i[10],s[11]=i[11],s[12]=i[12],s[13]=i[13],s[14]=i[14],s[15]=i[15],this}copyPosition(t){const s=this.elements,i=t.elements;return s[12]=i[12],s[13]=i[13],s[14]=i[14],this}setFromMatrix3(t){const s=t.elements;return this.set(s[0],s[3],s[6],0,s[1],s[4],s[7],0,s[2],s[5],s[8],0,0,0,0,1),this}extractBasis(t,s,i){return t.setFromMatrixColumn(this,0),s.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,s,i){return this.set(t.x,s.x,i.x,0,t.y,s.y,i.y,0,t.z,s.z,i.z,0,0,0,0,1),this}extractRotation(t){const s=this.elements,i=t.elements,e=1/Lt.setFromMatrixColumn(t,0).length(),n=1/Lt.setFromMatrixColumn(t,1).length(),r=1/Lt.setFromMatrixColumn(t,2).length();return s[0]=i[0]*e,s[1]=i[1]*e,s[2]=i[2]*e,s[3]=0,s[4]=i[4]*n,s[5]=i[5]*n,s[6]=i[6]*n,s[7]=0,s[8]=i[8]*r,s[9]=i[9]*r,s[10]=i[10]*r,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromEuler(t){const s=this.elements,i=t.x,e=t.y,n=t.z,r=Math.cos(i),o=Math.sin(i),a=Math.cos(e),h=Math.sin(e),c=Math.cos(n),u=Math.sin(n);if(t.order==="XYZ"){const l=r*c,d=r*u,p=o*c,y=o*u;s[0]=a*c,s[4]=-a*u,s[8]=h,s[1]=d+p*h,s[5]=l-y*h,s[9]=-o*a,s[2]=y-l*h,s[6]=p+d*h,s[10]=r*a}else if(t.order==="YXZ"){const l=a*c,d=a*u,p=h*c,y=h*u;s[0]=l+y*o,s[4]=p*o-d,s[8]=r*h,s[1]=r*u,s[5]=r*c,s[9]=-o,s[2]=d*o-p,s[6]=y+l*o,s[10]=r*a}else if(t.order==="ZXY"){const l=a*c,d=a*u,p=h*c,y=h*u;s[0]=l-y*o,s[4]=-r*u,s[8]=p+d*o,s[1]=d+p*o,s[5]=r*c,s[9]=y-l*o,s[2]=-r*h,s[6]=o,s[10]=r*a}else if(t.order==="ZYX"){const l=r*c,d=r*u,p=o*c,y=o*u;s[0]=a*c,s[4]=p*h-d,s[8]=l*h+y,s[1]=a*u,s[5]=y*h+l,s[9]=d*h-p,s[2]=-h,s[6]=o*a,s[10]=r*a}else if(t.order==="YZX"){const l=r*a,d=r*h,p=o*a,y=o*h;s[0]=a*c,s[4]=y-l*u,s[8]=p*u+d,s[1]=u,s[5]=r*c,s[9]=-o*c,s[2]=-h*c,s[6]=d*u+p,s[10]=l-y*u}else if(t.order==="XZY"){const l=r*a,d=r*h,p=o*a,y=o*h;s[0]=a*c,s[4]=-u,s[8]=h*c,s[1]=l*u+y,s[5]=r*c,s[9]=d*u-p,s[2]=p*u-d,s[6]=o*c,s[10]=y*u+l}return s[3]=0,s[7]=0,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromQuaternion(t){return this.compose(xe,t,ge)}lookAt(t,s,i){const e=this.elements;return $.subVectors(t,s),$.lengthSq()===0&&($.z=1),$.normalize(),bt.crossVectors(i,$),bt.lengthSq()===0&&(Math.abs(i.z)===1?$.x+=1e-4:$.z+=1e-4,$.normalize(),bt.crossVectors(i,$)),bt.normalize(),_s.crossVectors($,bt),e[0]=bt.x,e[4]=_s.x,e[8]=$.x,e[1]=bt.y,e[5]=_s.y,e[9]=$.y,e[2]=bt.z,e[6]=_s.z,e[10]=$.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,n=this.elements,r=i[0],o=i[4],a=i[8],h=i[12],c=i[1],u=i[5],l=i[9],d=i[13],p=i[2],y=i[6],x=i[10],m=i[14],g=i[3],b=i[7],_=i[11],w=i[15],A=e[0],z=e[4],S=e[8],T=e[12],B=e[1],C=e[5],P=e[9],E=e[13],F=e[2],U=e[6],k=e[10],j=e[14],ct=e[3],lt=e[7],vs=e[11],Zs=e[15];return n[0]=r*A+o*B+a*F+h*ct,n[4]=r*z+o*C+a*U+h*lt,n[8]=r*S+o*P+a*k+h*vs,n[12]=r*T+o*E+a*j+h*Zs,n[1]=c*A+u*B+l*F+d*ct,n[5]=c*z+u*C+l*U+d*lt,n[9]=c*S+u*P+l*k+d*vs,n[13]=c*T+u*E+l*j+d*Zs,n[2]=p*A+y*B+x*F+m*ct,n[6]=p*z+y*C+x*U+m*lt,n[10]=p*S+y*P+x*k+m*vs,n[14]=p*T+y*E+x*j+m*Zs,n[3]=g*A+b*B+_*F+w*ct,n[7]=g*z+b*C+_*U+w*lt,n[11]=g*S+b*P+_*k+w*vs,n[15]=g*T+b*E+_*j+w*Zs,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[4]*=t,s[8]*=t,s[12]*=t,s[1]*=t,s[5]*=t,s[9]*=t,s[13]*=t,s[2]*=t,s[6]*=t,s[10]*=t,s[14]*=t,s[3]*=t,s[7]*=t,s[11]*=t,s[15]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[4],e=t[8],n=t[12],r=t[1],o=t[5],a=t[9],h=t[13],c=t[2],u=t[6],l=t[10],d=t[14],p=t[3],y=t[7],x=t[11],m=t[15];return p*(+n*a*u-e*h*u-n*o*l+i*h*l+e*o*d-i*a*d)+y*(+s*a*d-s*h*l+n*r*l-e*r*d+e*h*c-n*a*c)+x*(+s*h*u-s*o*d-n*r*u+i*r*d+n*o*c-i*h*c)+m*(-e*o*c-s*a*u+s*o*l+e*r*u-i*r*l+i*a*c)}transpose(){const t=this.elements;let s;return s=t[1],t[1]=t[4],t[4]=s,s=t[2],t[2]=t[8],t[8]=s,s=t[6],t[6]=t[9],t[9]=s,s=t[3],t[3]=t[12],t[12]=s,s=t[7],t[7]=t[13],t[13]=s,s=t[11],t[11]=t[14],t[14]=s,this}setPosition(t,s,i){const e=this.elements;return t.isVector3?(e[12]=t.x,e[13]=t.y,e[14]=t.z):(e[12]=t,e[13]=s,e[14]=i),this}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],c=t[8],u=t[9],l=t[10],d=t[11],p=t[12],y=t[13],x=t[14],m=t[15],g=u*x*h-y*l*h+y*a*d-o*x*d-u*a*m+o*l*m,b=p*l*h-c*x*h-p*a*d+r*x*d+c*a*m-r*l*m,_=c*y*h-p*u*h+p*o*d-r*y*d-c*o*m+r*u*m,w=p*u*a-c*y*a-p*o*l+r*y*l+c*o*x-r*u*x,A=s*g+i*b+e*_+n*w;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const z=1/A;return t[0]=g*z,t[1]=(y*l*n-u*x*n-y*e*d+i*x*d+u*e*m-i*l*m)*z,t[2]=(o*x*n-y*a*n+y*e*h-i*x*h-o*e*m+i*a*m)*z,t[3]=(u*a*n-o*l*n-u*e*h+i*l*h+o*e*d-i*a*d)*z,t[4]=b*z,t[5]=(c*x*n-p*l*n+p*e*d-s*x*d-c*e*m+s*l*m)*z,t[6]=(p*a*n-r*x*n-p*e*h+s*x*h+r*e*m-s*a*m)*z,t[7]=(r*l*n-c*a*n+c*e*h-s*l*h-r*e*d+s*a*d)*z,t[8]=_*z,t[9]=(p*u*n-c*y*n-p*i*d+s*y*d+c*i*m-s*u*m)*z,t[10]=(r*y*n-p*o*n+p*i*h-s*y*h-r*i*m+s*o*m)*z,t[11]=(c*o*n-r*u*n-c*i*h+s*u*h+r*i*d-s*o*d)*z,t[12]=w*z,t[13]=(c*y*e-p*u*e+p*i*l-s*y*l-c*i*x+s*u*x)*z,t[14]=(p*o*e-r*y*e-p*i*a+s*y*a+r*i*x-s*o*x)*z,t[15]=(r*u*e-c*o*e+c*i*a-s*u*a-r*i*l+s*o*l)*z,this}scale(t){const s=this.elements,i=t.x,e=t.y,n=t.z;return s[0]*=i,s[4]*=e,s[8]*=n,s[1]*=i,s[5]*=e,s[9]*=n,s[2]*=i,s[6]*=e,s[10]*=n,s[3]*=i,s[7]*=e,s[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,s=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],e=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(s,i,e))}makeTranslation(t,s,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,s,0,0,1,i,0,0,0,1),this}makeRotationX(t){const s=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,s,-i,0,0,i,s,0,0,0,0,1),this}makeRotationY(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,0,i,0,0,1,0,0,-i,0,s,0,0,0,0,1),this}makeRotationZ(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,-i,0,0,i,s,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,s){const i=Math.cos(s),e=Math.sin(s),n=1-i,r=t.x,o=t.y,a=t.z,h=n*r,c=n*o;return this.set(h*r+i,h*o-e*a,h*a+e*o,0,h*o+e*a,c*o+i,c*a-e*r,0,h*a-e*o,c*a+e*r,n*a*a+i,0,0,0,0,1),this}makeScale(t,s,i){return this.set(t,0,0,0,0,s,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,s,i,e,n,r){return this.set(1,i,n,0,t,1,r,0,s,e,1,0,0,0,0,1),this}compose(t,s,i){const e=this.elements,n=s._x,r=s._y,o=s._z,a=s._w,h=n+n,c=r+r,u=o+o,l=n*h,d=n*c,p=n*u,y=r*c,x=r*u,m=o*u,g=a*h,b=a*c,_=a*u,w=i.x,A=i.y,z=i.z;return e[0]=(1-(y+m))*w,e[1]=(d+_)*w,e[2]=(p-b)*w,e[3]=0,e[4]=(d-_)*A,e[5]=(1-(l+m))*A,e[6]=(x+g)*A,e[7]=0,e[8]=(p+b)*z,e[9]=(x-g)*z,e[10]=(1-(l+y))*z,e[11]=0,e[12]=t.x,e[13]=t.y,e[14]=t.z,e[15]=1,this}decompose(t,s,i){const e=this.elements;let n=Lt.set(e[0],e[1],e[2]).length();const r=Lt.set(e[4],e[5],e[6]).length(),o=Lt.set(e[8],e[9],e[10]).length();this.determinant()<0&&(n=-n),t.x=e[12],t.y=e[13],t.z=e[14],nt.copy(this);const h=1/n,c=1/r,u=1/o;return nt.elements[0]*=h,nt.elements[1]*=h,nt.elements[2]*=h,nt.elements[4]*=c,nt.elements[5]*=c,nt.elements[6]*=c,nt.elements[8]*=u,nt.elements[9]*=u,nt.elements[10]*=u,s.setFromRotationMatrix(nt),i.x=n,i.y=r,i.z=o,this}makePerspective(t,s,i,e,n,r,o=2e3,a=!1){const h=this.elements,c=2*n/(s-t),u=2*n/(i-e),l=(s+t)/(s-t),d=(i+e)/(i-e);let p,y;if(a)p=n/(r-n),y=r*n/(r-n);else if(o===2e3)p=-(r+n)/(r-n),y=-2*r*n/(r-n);else if(o===2001)p=-r/(r-n),y=-r*n/(r-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return h[0]=c,h[4]=0,h[8]=l,h[12]=0,h[1]=0,h[5]=u,h[9]=d,h[13]=0,h[2]=0,h[6]=0,h[10]=p,h[14]=y,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,s,i,e,n,r,o=2e3,a=!1){const h=this.elements,c=2/(s-t),u=2/(i-e),l=-(s+t)/(s-t),d=-(i+e)/(i-e);let p,y;if(a)p=1/(r-n),y=r/(r-n);else if(o===2e3)p=-2/(r-n),y=-(r+n)/(r-n);else if(o===2001)p=-1/(r-n),y=-n/(r-n);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return h[0]=c,h[4]=0,h[8]=0,h[12]=l,h[1]=0,h[5]=u,h[9]=0,h[13]=d,h[2]=0,h[6]=0,h[10]=p,h[14]=y,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const s=this.elements,i=t.elements;for(let e=0;e<16;e++)if(s[e]!==i[e])return!1;return!0}fromArray(t,s=0){for(let i=0;i<16;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t[s+9]=i[9],t[s+10]=i[10],t[s+11]=i[11],t[s+12]=i[12],t[s+13]=i[13],t[s+14]=i[14],t[s+15]=i[15],t}}const Lt=new M,nt=new D,xe=new M(0,0,0),ge=new M(1,1,1),bt=new M,_s=new M,$=new M,Ni=new D,qi=new ss;class Ms{constructor(t=0,s=0,i=0,e=Ms.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=s,this._z=i,this._order=e}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,s,i,e=this._order){return this._x=t,this._y=s,this._z=i,this._order=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,s=this._order,i=!0){const e=t.elements,n=e[0],r=e[4],o=e[8],a=e[1],h=e[5],c=e[9],u=e[2],l=e[6],d=e[10];switch(s){case"XYZ":this._y=Math.asin(R(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(l,h),this._z=0);break;case"YXZ":this._x=Math.asin(-R(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(a,h)):(this._y=Math.atan2(-u,n),this._z=0);break;case"ZXY":this._x=Math.asin(R(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-r,h)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-R(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(l,d),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-r,h));break;case"YZX":this._z=Math.asin(R(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,h),this._y=Math.atan2(-u,n)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-R(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(l,h),this._y=Math.atan2(o,n)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+s)}return this._order=s,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,s,i){return Ni.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Ni,s,i)}setFromVector3(t,s=this._order){return this.set(t.x,t.y,t.z,s)}reorder(t){return qi.setFromEuler(this),this.setFromQuaternion(qi,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ms.DEFAULT_ORDER="XYZ";class we{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let be=0;const Di=new M,Nt=new ss,ft=new D,zs=new M,rs=new M,_e=new M,Me=new ss,Oi=new M(1,0,0),Wi=new M(0,1,0),Xi=new M(0,0,1),Yi={type:"added"},ze={type:"removed"},qt={type:"childadded",child:null},si={type:"childremoved",child:null};class _t extends $s{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:be++}),this.uuid=xs(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=_t.DEFAULT_UP.clone();const t=new M,s=new Ms,i=new ss,e=new M(1,1,1);function n(){i.setFromEuler(s,!1)}function r(){s.setFromQuaternion(i,void 0,!1)}s._onChange(n),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:s},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:e},modelViewMatrix:{value:new D},normalMatrix:{value:new Tt}}),this.matrix=new D,this.matrixWorld=new D,this.matrixAutoUpdate=_t.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=_t.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new we,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,s){this.quaternion.setFromAxisAngle(t,s)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,s){return Nt.setFromAxisAngle(t,s),this.quaternion.multiply(Nt),this}rotateOnWorldAxis(t,s){return Nt.setFromAxisAngle(t,s),this.quaternion.premultiply(Nt),this}rotateX(t){return this.rotateOnAxis(Oi,t)}rotateY(t){return this.rotateOnAxis(Wi,t)}rotateZ(t){return this.rotateOnAxis(Xi,t)}translateOnAxis(t,s){return Di.copy(t).applyQuaternion(this.quaternion),this.position.add(Di.multiplyScalar(s)),this}translateX(t){return this.translateOnAxis(Oi,t)}translateY(t){return this.translateOnAxis(Wi,t)}translateZ(t){return this.translateOnAxis(Xi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(ft.copy(this.matrixWorld).invert())}lookAt(t,s,i){t.isVector3?zs.copy(t):zs.set(t,s,i);const e=this.parent;this.updateWorldMatrix(!0,!1),rs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ft.lookAt(rs,zs,this.up):ft.lookAt(zs,rs,this.up),this.quaternion.setFromRotationMatrix(ft),e&&(ft.extractRotation(e.matrixWorld),Nt.setFromRotationMatrix(ft),this.quaternion.premultiply(Nt.invert()))}add(t){if(arguments.length>1){for(let s=0;s<arguments.length;s++)this.add(arguments[s]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Yi),qt.child=t,this.dispatchEvent(qt),qt.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const s=this.children.indexOf(t);return s!==-1&&(t.parent=null,this.children.splice(s,1),t.dispatchEvent(ze),si.child=t,this.dispatchEvent(si),si.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),ft.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),ft.multiply(t.parent.matrixWorld)),t.applyMatrix4(ft),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Yi),qt.child=t,this.dispatchEvent(qt),qt.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,s){if(this[t]===s)return this;for(let i=0,e=this.children.length;i<e;i++){const r=this.children[i].getObjectByProperty(t,s);if(r!==void 0)return r}}getObjectsByProperty(t,s,i=[]){this[t]===s&&i.push(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].getObjectsByProperty(t,s,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rs,t,_e),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rs,Me,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const s=this.matrixWorld.elements;return t.set(s[8],s[9],s[10]).normalize()}raycast(){}traverse(t){t(this);const s=this.children;for(let i=0,e=s.length;i<e;i++)s[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const s=this.children;for(let i=0,e=s.length;i<e;i++)s[i].traverseVisible(t)}traverseAncestors(t){const s=this.parent;s!==null&&(t(s),s.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const s=this.children;for(let i=0,e=s.length;i<e;i++)s[i].updateMatrixWorld(t)}updateWorldMatrix(t,s){const i=this.parent;if(t===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),s===!0){const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].updateWorldMatrix(!1,!0)}}toJSON(t){const s=t===void 0||typeof t=="string",i={};s&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const e={};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.castShadow===!0&&(e.castShadow=!0),this.receiveShadow===!0&&(e.receiveShadow=!0),this.visible===!1&&(e.visible=!1),this.frustumCulled===!1&&(e.frustumCulled=!1),this.renderOrder!==0&&(e.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(e.userData=this.userData),e.layers=this.layers.mask,e.matrix=this.matrix.toArray(),e.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(e.matrixAutoUpdate=!1),this.isInstancedMesh&&(e.type="InstancedMesh",e.count=this.count,e.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(e.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(e.type="BatchedMesh",e.perObjectFrustumCulled=this.perObjectFrustumCulled,e.sortObjects=this.sortObjects,e.drawRanges=this._drawRanges,e.reservedRanges=this._reservedRanges,e.geometryInfo=this._geometryInfo.map(o=>({...o,boundingBox:o.boundingBox?o.boundingBox.toJSON():void 0,boundingSphere:o.boundingSphere?o.boundingSphere.toJSON():void 0})),e.instanceInfo=this._instanceInfo.map(o=>({...o})),e.availableInstanceIds=this._availableInstanceIds.slice(),e.availableGeometryIds=this._availableGeometryIds.slice(),e.nextIndexStart=this._nextIndexStart,e.nextVertexStart=this._nextVertexStart,e.geometryCount=this._geometryCount,e.maxInstanceCount=this._maxInstanceCount,e.maxVertexCount=this._maxVertexCount,e.maxIndexCount=this._maxIndexCount,e.geometryInitialized=this._geometryInitialized,e.matricesTexture=this._matricesTexture.toJSON(t),e.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(e.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(e.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(e.boundingBox=this.boundingBox.toJSON()));function n(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(t)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?e.background=this.background.toJSON():this.background.isTexture&&(e.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(e.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){e.geometry=n(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let h=0,c=a.length;h<c;h++){const u=a[h];n(t.shapes,u)}else n(t.shapes,a)}}if(this.isSkinnedMesh&&(e.bindMode=this.bindMode,e.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),e.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,h=this.material.length;a<h;a++)o.push(n(t.materials,this.material[a]));e.material=o}else e.material=n(t.materials,this.material);if(this.children.length>0){e.children=[];for(let o=0;o<this.children.length;o++)e.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){e.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];e.animations.push(n(t.animations,a))}}if(s){const o=r(t.geometries),a=r(t.materials),h=r(t.textures),c=r(t.images),u=r(t.shapes),l=r(t.skeletons),d=r(t.animations),p=r(t.nodes);o.length>0&&(i.geometries=o),a.length>0&&(i.materials=a),h.length>0&&(i.textures=h),c.length>0&&(i.images=c),u.length>0&&(i.shapes=u),l.length>0&&(i.skeletons=l),d.length>0&&(i.animations=d),p.length>0&&(i.nodes=p)}return i.object=e,i;function r(o){const a=[];for(const h in o){const c=o[h];delete c.metadata,a.push(c)}return a}}clone(t){return new this.constructor().copy(this,t)}copy(t,s=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),s===!0)for(let i=0;i<t.children.length;i++){const e=t.children[i];this.add(e.clone())}return this}}_t.DEFAULT_UP=new M(0,1,0),_t.DEFAULT_MATRIX_AUTO_UPDATE=!0,_t.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const rt=new M,dt=new M,ii=new M,pt=new M,Dt=new M,Ot=new M,vi=new M,ei=new M,ni=new M,ri=new M,oi=new is,ai=new is,hi=new is;class G{constructor(t=new M,s=new M,i=new M){this.a=t,this.b=s,this.c=i}static getNormal(t,s,i,e){e.subVectors(i,s),rt.subVectors(t,s),e.cross(rt);const n=e.lengthSq();return n>0?e.multiplyScalar(1/Math.sqrt(n)):e.set(0,0,0)}static getBarycoord(t,s,i,e,n){rt.subVectors(e,s),dt.subVectors(i,s),ii.subVectors(t,s);const r=rt.dot(rt),o=rt.dot(dt),a=rt.dot(ii),h=dt.dot(dt),c=dt.dot(ii),u=r*h-o*o;if(u===0)return n.set(0,0,0),null;const l=1/u,d=(h*a-o*c)*l,p=(r*c-o*a)*l;return n.set(1-d-p,p,d)}static containsPoint(t,s,i,e){return this.getBarycoord(t,s,i,e,pt)===null?!1:pt.x>=0&&pt.y>=0&&pt.x+pt.y<=1}static getInterpolation(t,s,i,e,n,r,o,a){return this.getBarycoord(t,s,i,e,pt)===null?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(n,pt.x),a.addScaledVector(r,pt.y),a.addScaledVector(o,pt.z),a)}static getInterpolatedAttribute(t,s,i,e,n,r){return oi.setScalar(0),ai.setScalar(0),hi.setScalar(0),oi.fromBufferAttribute(t,s),ai.fromBufferAttribute(t,i),hi.fromBufferAttribute(t,e),r.setScalar(0),r.addScaledVector(oi,n.x),r.addScaledVector(ai,n.y),r.addScaledVector(hi,n.z),r}static isFrontFacing(t,s,i,e){return rt.subVectors(i,s),dt.subVectors(t,s),rt.cross(dt).dot(e)<0}set(t,s,i){return this.a.copy(t),this.b.copy(s),this.c.copy(i),this}setFromPointsAndIndices(t,s,i,e){return this.a.copy(t[s]),this.b.copy(t[i]),this.c.copy(t[e]),this}setFromAttributeAndIndices(t,s,i,e){return this.a.fromBufferAttribute(t,s),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,e),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return rt.subVectors(this.c,this.b),dt.subVectors(this.a,this.b),rt.cross(dt).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return G.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,s){return G.getBarycoord(t,this.a,this.b,this.c,s)}getInterpolation(t,s,i,e,n){return G.getInterpolation(t,this.a,this.b,this.c,s,i,e,n)}containsPoint(t){return G.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return G.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,s){const i=this.a,e=this.b,n=this.c;let r,o;Dt.subVectors(e,i),Ot.subVectors(n,i),ei.subVectors(t,i);const a=Dt.dot(ei),h=Ot.dot(ei);if(a<=0&&h<=0)return s.copy(i);ni.subVectors(t,e);const c=Dt.dot(ni),u=Ot.dot(ni);if(c>=0&&u<=c)return s.copy(e);const l=a*u-c*h;if(l<=0&&a>=0&&c<=0)return r=a/(a-c),s.copy(i).addScaledVector(Dt,r);ri.subVectors(t,n);const d=Dt.dot(ri),p=Ot.dot(ri);if(p>=0&&d<=p)return s.copy(n);const y=d*h-a*p;if(y<=0&&h>=0&&p<=0)return o=h/(h-p),s.copy(i).addScaledVector(Ot,o);const x=c*p-d*u;if(x<=0&&u-c>=0&&d-p>=0)return vi.subVectors(n,e),o=(u-c)/(u-c+(d-p)),s.copy(e).addScaledVector(vi,o);const m=1/(x+y+l);return r=y*m,o=l*m,s.copy(i).addScaledVector(Dt,r).addScaledVector(Ot,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const L=new M,As=new W;let Ae=0;class ht{constructor(t,s,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Ae++}),this.name="",this.array=t,this.itemSize=s,this.count=t!==void 0?t.length/s:0,this.normalized=i,this.usage=35044,this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,s){this.updateRanges.push({start:t,count:s})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,s,i){t*=this.itemSize,i*=s.itemSize;for(let e=0,n=this.itemSize;e<n;e++)this.array[t+e]=s.array[i+e];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let s=0,i=this.count;s<i;s++)As.fromBufferAttribute(this,s),As.applyMatrix3(t),this.setXY(s,As.x,As.y);else if(this.itemSize===3)for(let s=0,i=this.count;s<i;s++)L.fromBufferAttribute(this,s),L.applyMatrix3(t),this.setXYZ(s,L.x,L.y,L.z);return this}applyMatrix4(t){for(let s=0,i=this.count;s<i;s++)L.fromBufferAttribute(this,s),L.applyMatrix4(t),this.setXYZ(s,L.x,L.y,L.z);return this}applyNormalMatrix(t){for(let s=0,i=this.count;s<i;s++)L.fromBufferAttribute(this,s),L.applyNormalMatrix(t),this.setXYZ(s,L.x,L.y,L.z);return this}transformDirection(t){for(let s=0,i=this.count;s<i;s++)L.fromBufferAttribute(this,s),L.transformDirection(t),this.setXYZ(s,L.x,L.y,L.z);return this}set(t,s=0){return this.array.set(t,s),this}getComponent(t,s){let i=this.array[t*this.itemSize+s];return this.normalized&&(i=ts(i,this.array)),i}setComponent(t,s,i){return this.normalized&&(i=v(i,this.array)),this.array[t*this.itemSize+s]=i,this}getX(t){let s=this.array[t*this.itemSize];return this.normalized&&(s=ts(s,this.array)),s}setX(t,s){return this.normalized&&(s=v(s,this.array)),this.array[t*this.itemSize]=s,this}getY(t){let s=this.array[t*this.itemSize+1];return this.normalized&&(s=ts(s,this.array)),s}setY(t,s){return this.normalized&&(s=v(s,this.array)),this.array[t*this.itemSize+1]=s,this}getZ(t){let s=this.array[t*this.itemSize+2];return this.normalized&&(s=ts(s,this.array)),s}setZ(t,s){return this.normalized&&(s=v(s,this.array)),this.array[t*this.itemSize+2]=s,this}getW(t){let s=this.array[t*this.itemSize+3];return this.normalized&&(s=ts(s,this.array)),s}setW(t,s){return this.normalized&&(s=v(s,this.array)),this.array[t*this.itemSize+3]=s,this}setXY(t,s,i){return t*=this.itemSize,this.normalized&&(s=v(s,this.array),i=v(i,this.array)),this.array[t+0]=s,this.array[t+1]=i,this}setXYZ(t,s,i,e){return t*=this.itemSize,this.normalized&&(s=v(s,this.array),i=v(i,this.array),e=v(e,this.array)),this.array[t+0]=s,this.array[t+1]=i,this.array[t+2]=e,this}setXYZW(t,s,i,e,n){return t*=this.itemSize,this.normalized&&(s=v(s,this.array),i=v(i,this.array),e=v(e,this.array),n=v(n,this.array)),this.array[t+0]=s,this.array[t+1]=i,this.array[t+2]=e,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),t}}class Se extends ht{constructor(t,s,i){super(new Uint16Array(t),s,i)}}class Te extends ht{constructor(t,s,i){super(new Uint32Array(t),s,i)}}class Be extends ht{constructor(t,s,i){super(new Float32Array(t),s,i)}}let Pe=0;const Q=new D,ci=new _t,Wt=new M,H=new X,os=new X,q=new M;class li extends $s{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Pe++}),this.uuid=xs(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(ue(t)?Te:Se)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,s){return this.attributes[t]=s,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,s,i=0){this.groups.push({start:t,count:s,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,s){this.drawRange.start=t,this.drawRange.count=s}applyMatrix4(t){const s=this.attributes.position;s!==void 0&&(s.applyMatrix4(t),s.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new Tt().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const e=this.attributes.tangent;return e!==void 0&&(e.transformDirection(t),e.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Q.makeRotationFromQuaternion(t),this.applyMatrix4(Q),this}rotateX(t){return Q.makeRotationX(t),this.applyMatrix4(Q),this}rotateY(t){return Q.makeRotationY(t),this.applyMatrix4(Q),this}rotateZ(t){return Q.makeRotationZ(t),this.applyMatrix4(Q),this}translate(t,s,i){return Q.makeTranslation(t,s,i),this.applyMatrix4(Q),this}scale(t,s,i){return Q.makeScale(t,s,i),this.applyMatrix4(Q),this}lookAt(t){return ci.lookAt(t),ci.updateMatrix(),this.applyMatrix4(ci.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Wt).negate(),this.translate(Wt.x,Wt.y,Wt.z),this}setFromPoints(t){const s=this.getAttribute("position");if(s===void 0){const i=[];for(let e=0,n=t.length;e<n;e++){const r=t[e];i.push(r.x,r.y,r.z||0)}this.setAttribute("position",new Be(i,3))}else{const i=Math.min(t.length,s.count);for(let e=0;e<i;e++){const n=t[e];s.setXYZ(e,n.x,n.y,n.z||0)}t.length>s.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),s.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new X);const t=this.attributes.position,s=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new M(-1/0,-1/0,-1/0),new M(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),s)for(let i=0,e=s.length;i<e;i++){const n=s[i];H.setFromBufferAttribute(n),this.morphTargetsRelative?(q.addVectors(this.boundingBox.min,H.min),this.boundingBox.expandByPoint(q),q.addVectors(this.boundingBox.max,H.max),this.boundingBox.expandByPoint(q)):(this.boundingBox.expandByPoint(H.min),this.boundingBox.expandByPoint(H.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Li);const t=this.attributes.position,s=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new M,1/0);return}if(t){const i=this.boundingSphere.center;if(H.setFromBufferAttribute(t),s)for(let n=0,r=s.length;n<r;n++){const o=s[n];os.setFromBufferAttribute(o),this.morphTargetsRelative?(q.addVectors(H.min,os.min),H.expandByPoint(q),q.addVectors(H.max,os.max),H.expandByPoint(q)):(H.expandByPoint(os.min),H.expandByPoint(os.max))}H.getCenter(i);let e=0;for(let n=0,r=t.count;n<r;n++)q.fromBufferAttribute(t,n),e=Math.max(e,i.distanceToSquared(q));if(s)for(let n=0,r=s.length;n<r;n++){const o=s[n],a=this.morphTargetsRelative;for(let h=0,c=o.count;h<c;h++)q.fromBufferAttribute(o,h),a&&(Wt.fromBufferAttribute(t,h),q.add(Wt)),e=Math.max(e,i.distanceToSquared(q))}this.boundingSphere.radius=Math.sqrt(e),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,s=this.attributes;if(t===null||s.position===void 0||s.normal===void 0||s.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=s.position,e=s.normal,n=s.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ht(new Float32Array(4*i.count),4));const r=this.getAttribute("tangent"),o=[],a=[];for(let S=0;S<i.count;S++)o[S]=new M,a[S]=new M;const h=new M,c=new M,u=new M,l=new W,d=new W,p=new W,y=new M,x=new M;function m(S,T,B){h.fromBufferAttribute(i,S),c.fromBufferAttribute(i,T),u.fromBufferAttribute(i,B),l.fromBufferAttribute(n,S),d.fromBufferAttribute(n,T),p.fromBufferAttribute(n,B),c.sub(h),u.sub(h),d.sub(l),p.sub(l);const C=1/(d.x*p.y-p.x*d.y);isFinite(C)&&(y.copy(c).multiplyScalar(p.y).addScaledVector(u,-d.y).multiplyScalar(C),x.copy(u).multiplyScalar(d.x).addScaledVector(c,-p.x).multiplyScalar(C),o[S].add(y),o[T].add(y),o[B].add(y),a[S].add(x),a[T].add(x),a[B].add(x))}let g=this.groups;g.length===0&&(g=[{start:0,count:t.count}]);for(let S=0,T=g.length;S<T;++S){const B=g[S],C=B.start,P=B.count;for(let E=C,F=C+P;E<F;E+=3)m(t.getX(E+0),t.getX(E+1),t.getX(E+2))}const b=new M,_=new M,w=new M,A=new M;function z(S){w.fromBufferAttribute(e,S),A.copy(w);const T=o[S];b.copy(T),b.sub(w.multiplyScalar(w.dot(T))).normalize(),_.crossVectors(A,T);const C=_.dot(a[S])<0?-1:1;r.setXYZW(S,b.x,b.y,b.z,C)}for(let S=0,T=g.length;S<T;++S){const B=g[S],C=B.start,P=B.count;for(let E=C,F=C+P;E<F;E+=3)z(t.getX(E+0)),z(t.getX(E+1)),z(t.getX(E+2))}}computeVertexNormals(){const t=this.index,s=this.getAttribute("position");if(s!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new ht(new Float32Array(s.count*3),3),this.setAttribute("normal",i);else for(let l=0,d=i.count;l<d;l++)i.setXYZ(l,0,0,0);const e=new M,n=new M,r=new M,o=new M,a=new M,h=new M,c=new M,u=new M;if(t)for(let l=0,d=t.count;l<d;l+=3){const p=t.getX(l+0),y=t.getX(l+1),x=t.getX(l+2);e.fromBufferAttribute(s,p),n.fromBufferAttribute(s,y),r.fromBufferAttribute(s,x),c.subVectors(r,n),u.subVectors(e,n),c.cross(u),o.fromBufferAttribute(i,p),a.fromBufferAttribute(i,y),h.fromBufferAttribute(i,x),o.add(c),a.add(c),h.add(c),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(y,a.x,a.y,a.z),i.setXYZ(x,h.x,h.y,h.z)}else for(let l=0,d=s.count;l<d;l+=3)e.fromBufferAttribute(s,l+0),n.fromBufferAttribute(s,l+1),r.fromBufferAttribute(s,l+2),c.subVectors(r,n),u.subVectors(e,n),c.cross(u),i.setXYZ(l+0,c.x,c.y,c.z),i.setXYZ(l+1,c.x,c.y,c.z),i.setXYZ(l+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let s=0,i=t.count;s<i;s++)q.fromBufferAttribute(t,s),q.normalize(),t.setXYZ(s,q.x,q.y,q.z)}toNonIndexed(){function t(o,a){const h=o.array,c=o.itemSize,u=o.normalized,l=new h.constructor(a.length*c);let d=0,p=0;for(let y=0,x=a.length;y<x;y++){o.isInterleavedBufferAttribute?d=a[y]*o.data.stride+o.offset:d=a[y]*c;for(let m=0;m<c;m++)l[p++]=h[d++]}return new ht(l,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const s=new li,i=this.index.array,e=this.attributes;for(const o in e){const a=e[o],h=t(a,i);s.setAttribute(o,h)}const n=this.morphAttributes;for(const o in n){const a=[],h=n[o];for(let c=0,u=h.length;c<u;c++){const l=h[c],d=t(l,i);a.push(d)}s.morphAttributes[o]=a}s.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let o=0,a=r.length;o<a;o++){const h=r[o];s.addGroup(h.start,h.count,h.materialIndex)}return s}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const h in a)a[h]!==void 0&&(t[h]=a[h]);return t}t.data={attributes:{}};const s=this.index;s!==null&&(t.data.index={type:s.array.constructor.name,array:Array.prototype.slice.call(s.array)});const i=this.attributes;for(const a in i){const h=i[a];t.data.attributes[a]=h.toJSON(t.data)}const e={};let n=!1;for(const a in this.morphAttributes){const h=this.morphAttributes[a],c=[];for(let u=0,l=h.length;u<l;u++){const d=h[u];c.push(d.toJSON(t.data))}c.length>0&&(e[a]=c,n=!0)}n&&(t.data.morphAttributes=e,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere=o.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const s={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone());const e=t.attributes;for(const h in e){const c=e[h];this.setAttribute(h,c.clone(s))}const n=t.morphAttributes;for(const h in n){const c=[],u=n[h];for(let l=0,d=u.length;l<d;l++)c.push(u[l].clone(s));this.morphAttributes[h]=c}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let h=0,c=r.length;h<c;h++){const u=r[h];this.addGroup(u.start,u.count,u.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ui=new M,Ce=new M,Ee=new Tt;class Zi{constructor(t=new M(1,0,0),s=0){this.isPlane=!0,this.normal=t,this.constant=s}set(t,s){return this.normal.copy(t),this.constant=s,this}setComponents(t,s,i,e){return this.normal.set(t,s,i),this.constant=e,this}setFromNormalAndCoplanarPoint(t,s){return this.normal.copy(t),this.constant=-s.dot(this.normal),this}setFromCoplanarPoints(t,s,i){const e=ui.subVectors(i,s).cross(Ce.subVectors(t,s)).normalize();return this.setFromNormalAndCoplanarPoint(e,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,s){return s.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,s){const i=t.delta(ui),e=this.normal.dot(i);if(e===0)return this.distanceToPoint(t.start)===0?s.copy(t.start):null;const n=-(t.start.dot(this.normal)+this.constant)/e;return n<0||n>1?null:s.copy(t.start).addScaledVector(i,n)}intersectsLine(t){const s=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return s<0&&i>0||i<0&&s>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,s){const i=s||Ee.getNormalMatrix(t),e=this.coplanarPoint(ui).applyMatrix4(t),n=this.normal.applyMatrix3(i).normalize();return this.constant=-e.dot(n),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const $i=new M,Ss=new M,Xt=new M,Yt=new M,fi=new M,Fe=new M,Re=new M;class yt{constructor(t=new M,s=new M){this.start=t,this.end=s}set(t,s){return this.start.copy(t),this.end.copy(s),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,s){return this.delta(s).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,s){$i.subVectors(t,this.start),Ss.subVectors(this.end,this.start);const i=Ss.dot(Ss);let n=Ss.dot($i)/i;return s&&(n=R(n,0,1)),n}closestPointToPoint(t,s,i){const e=this.closestPointToPointParameter(t,s);return this.delta(i).multiplyScalar(e).add(this.start)}distanceSqToLine3(t,s=Fe,i=Re){const e=10000000000000001e-32;let n,r;const o=this.start,a=t.start,h=this.end,c=t.end;Xt.subVectors(h,o),Yt.subVectors(c,a),fi.subVectors(o,a);const u=Xt.dot(Xt),l=Yt.dot(Yt),d=Yt.dot(fi);if(u<=e&&l<=e)return s.copy(o),i.copy(a),s.sub(i),s.dot(s);if(u<=e)n=0,r=d/l,r=R(r,0,1);else{const p=Xt.dot(fi);if(l<=e)r=0,n=R(-p/u,0,1);else{const y=Xt.dot(Yt),x=u*l-y*y;x!==0?n=R((y*d-p*l)/x,0,1):n=0,r=(y*n+d)/l,r<0?(r=0,n=R(-p/u,0,1)):r>1&&(r=1,n=R((y-p)/u,0,1))}}return s.copy(o).add(Xt.multiplyScalar(n)),i.copy(a).add(Yt.multiplyScalar(r)),s.sub(i),s.dot(s)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"179"}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="179");const Hi=0,Ue=1,ke=2,Ji=2,di=1.25,ji=1,as=32,Ts=65535,Ie=Math.pow(2,-24),pi=Symbol("SKIP_GENERATION");function Ve(f){return f.index?f.index.count:f.attributes.position.count}function vt(f){return Ve(f)/3}function Le(f,t=ArrayBuffer){return f>65535?new Uint32Array(new t(4*f)):new Uint16Array(new t(2*f))}function Ne(f,t){if(!f.index){const s=f.attributes.position.count,i=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,e=Le(s,i);f.setIndex(new ht(e,1));for(let n=0;n<s;n++)e[n]=n}}function Gi(f,t){const s=vt(f),i=t||f.drawRange,e=i.start/3,n=(i.start+i.count)/3,r=Math.max(0,e),o=Math.min(s,n)-r;return[{offset:Math.floor(r),count:Math.floor(o)}]}function Qi(f,t){if(!f.groups||!f.groups.length)return Gi(f,t);const s=[],i=new Set,e=t||f.drawRange,n=e.start/3,r=(e.start+e.count)/3;for(const a of f.groups){const h=a.start/3,c=(a.start+a.count)/3;i.add(Math.max(n,h)),i.add(Math.min(r,c))}const o=Array.from(i.values()).sort((a,h)=>a-h);for(let a=0;a<o.length-1;a++){const h=o[a],c=o[a+1];s.push({offset:Math.floor(h),count:Math.floor(c-h)})}return s}function qe(f,t){const s=vt(f),i=Qi(f,t).sort((r,o)=>r.offset-o.offset),e=i[i.length-1];e.count=Math.min(s-e.offset,e.count);let n=0;return i.forEach(({count:r})=>n+=r),s!==n}function yi(f,t,s,i,e){let n=1/0,r=1/0,o=1/0,a=-1/0,h=-1/0,c=-1/0,u=1/0,l=1/0,d=1/0,p=-1/0,y=-1/0,x=-1/0;for(let m=t*6,g=(t+s)*6;m<g;m+=6){const b=f[m+0],_=f[m+1],w=b-_,A=b+_;w<n&&(n=w),A>a&&(a=A),b<u&&(u=b),b>p&&(p=b);const z=f[m+2],S=f[m+3],T=z-S,B=z+S;T<r&&(r=T),B>h&&(h=B),z<l&&(l=z),z>y&&(y=z);const C=f[m+4],P=f[m+5],E=C-P,F=C+P;E<o&&(o=E),F>c&&(c=F),C<d&&(d=C),C>x&&(x=C)}i[0]=n,i[1]=r,i[2]=o,i[3]=a,i[4]=h,i[5]=c,e[0]=u,e[1]=l,e[2]=d,e[3]=p,e[4]=y,e[5]=x}function De(f,t=null,s=null,i=null){const e=f.attributes.position,n=f.index?f.index.array:null,r=vt(f),o=e.normalized;let a;t===null?(a=new Float32Array(r*6),s=0,i=r):(a=t,s=s||0,i=i||r);const h=e.array,c=e.offset||0;let u=3;e.isInterleavedBufferAttribute&&(u=e.data.stride);const l=["getX","getY","getZ"];for(let d=s;d<s+i;d++){const p=d*3,y=d*6;let x=p+0,m=p+1,g=p+2;n&&(x=n[x],m=n[m],g=n[g]),o||(x=x*u+c,m=m*u+c,g=g*u+c);for(let b=0;b<3;b++){let _,w,A;o?(_=e[l[b]](x),w=e[l[b]](m),A=e[l[b]](g)):(_=h[x+b],w=h[m+b],A=h[g+b]);let z=_;w<z&&(z=w),A<z&&(z=A);let S=_;w>S&&(S=w),A>S&&(S=A);const T=(S-z)/2,B=b*2;a[y+B+0]=z+T,a[y+B+1]=T+(Math.abs(z)+T)*Ie}}return a}function V(f,t,s){return s.min.x=t[f],s.min.y=t[f+1],s.min.z=t[f+2],s.max.x=t[f+3],s.max.y=t[f+4],s.max.z=t[f+5],s}function Ki(f){let t=-1,s=-1/0;for(let i=0;i<3;i++){const e=f[i+3]-f[i];e>s&&(s=e,t=i)}return t}function te(f,t){t.set(f)}function se(f,t,s){let i,e;for(let n=0;n<3;n++){const r=n+3;i=f[n],e=t[n],s[n]=i<e?i:e,i=f[r],e=t[r],s[r]=i>e?i:e}}function Bs(f,t,s){for(let i=0;i<3;i++){const e=t[f+2*i],n=t[f+2*i+1],r=e-n,o=e+n;r<s[i]&&(s[i]=r),o>s[i+3]&&(s[i+3]=o)}}function hs(f){const t=f[3]-f[0],s=f[4]-f[1],i=f[5]-f[2];return 2*(t*s+s*i+i*t)}const mt=32,Oe=(f,t)=>f.candidate-t.candidate,Mt=new Array(mt).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),Ps=new Float32Array(6);function We(f,t,s,i,e,n){let r=-1,o=0;if(n===Hi)r=Ki(t),r!==-1&&(o=(t[r]+t[r+3])/2);else if(n===Ue)r=Ki(f),r!==-1&&(o=Xe(s,i,e,r));else if(n===ke){const a=hs(f);let h=di*e;const c=i*6,u=(i+e)*6;for(let l=0;l<3;l++){const d=t[l],x=(t[l+3]-d)/mt;if(e<mt/4){const m=[...Mt];m.length=e;let g=0;for(let _=c;_<u;_+=6,g++){const w=m[g];w.candidate=s[_+2*l],w.count=0;const{bounds:A,leftCacheBounds:z,rightCacheBounds:S}=w;for(let T=0;T<3;T++)S[T]=1/0,S[T+3]=-1/0,z[T]=1/0,z[T+3]=-1/0,A[T]=1/0,A[T+3]=-1/0;Bs(_,s,A)}m.sort(Oe);let b=e;for(let _=0;_<b;_++){const w=m[_];for(;_+1<b&&m[_+1].candidate===w.candidate;)m.splice(_+1,1),b--}for(let _=c;_<u;_+=6){const w=s[_+2*l];for(let A=0;A<b;A++){const z=m[A];w>=z.candidate?Bs(_,s,z.rightCacheBounds):(Bs(_,s,z.leftCacheBounds),z.count++)}}for(let _=0;_<b;_++){const w=m[_],A=w.count,z=e-w.count,S=w.leftCacheBounds,T=w.rightCacheBounds;let B=0;A!==0&&(B=hs(S)/a);let C=0;z!==0&&(C=hs(T)/a);const P=ji+di*(B*A+C*z);P<h&&(r=l,h=P,o=w.candidate)}}else{for(let b=0;b<mt;b++){const _=Mt[b];_.count=0,_.candidate=d+x+b*x;const w=_.bounds;for(let A=0;A<3;A++)w[A]=1/0,w[A+3]=-1/0}for(let b=c;b<u;b+=6){let A=~~((s[b+2*l]-d)/x);A>=mt&&(A=mt-1);const z=Mt[A];z.count++,Bs(b,s,z.bounds)}const m=Mt[mt-1];te(m.bounds,m.rightCacheBounds);for(let b=mt-2;b>=0;b--){const _=Mt[b],w=Mt[b+1];se(_.bounds,w.rightCacheBounds,_.rightCacheBounds)}let g=0;for(let b=0;b<mt-1;b++){const _=Mt[b],w=_.count,A=_.bounds,S=Mt[b+1].rightCacheBounds;w!==0&&(g===0?te(A,Ps):se(A,Ps,Ps)),g+=w;let T=0,B=0;g!==0&&(T=hs(Ps)/a);const C=e-g;C!==0&&(B=hs(S)/a);const P=ji+di*(T*g+B*C);P<h&&(r=l,h=P,o=_.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${n} used.`);return{axis:r,pos:o}}function Xe(f,t,s,i){let e=0;for(let n=t,r=t+s;n<r;n++)e+=f[n*6+i*2];return e/s}class mi{constructor(){this.boundingData=new Float32Array(6)}}function Ye(f,t,s,i,e,n){let r=i,o=i+e-1;const a=n.pos,h=n.axis*2;for(;;){for(;r<=o&&s[r*6+h]<a;)r++;for(;r<=o&&s[o*6+h]>=a;)o--;if(r<o){for(let c=0;c<3;c++){let u=t[r*3+c];t[r*3+c]=t[o*3+c],t[o*3+c]=u}for(let c=0;c<6;c++){let u=s[r*6+c];s[r*6+c]=s[o*6+c],s[o*6+c]=u}r++,o--}else return r}}function ve(f,t,s,i,e,n){let r=i,o=i+e-1;const a=n.pos,h=n.axis*2;for(;;){for(;r<=o&&s[r*6+h]<a;)r++;for(;r<=o&&s[o*6+h]>=a;)o--;if(r<o){let c=f[r];f[r]=f[o],f[o]=c;for(let u=0;u<6;u++){let l=s[r*6+u];s[r*6+u]=s[o*6+u],s[o*6+u]=l}r++,o--}else return r}}function Z(f,t){return t[f+15]===65535}function J(f,t){return t[f+6]}function K(f,t){return t[f+14]}function tt(f){return f+8}function st(f,t){return t[f+6]}function ie(f,t){return t[f+7]}function tr(f){return f}let ee,cs,Cs,ne;const Ze=Math.pow(2,32);function xi(f){return"count"in f?1:1+xi(f.left)+xi(f.right)}function $e(f,t,s){return ee=new Float32Array(s),cs=new Uint32Array(s),Cs=new Uint16Array(s),ne=new Uint8Array(s),gi(f,t)}function gi(f,t){const s=f/4,i=f/2,e="count"in t,n=t.boundingData;for(let r=0;r<6;r++)ee[s+r]=n[r];if(e)if(t.buffer){const r=t.buffer;ne.set(new Uint8Array(r),f);for(let o=f,a=f+r.byteLength;o<a;o+=as){const h=o/2;Z(h,Cs)||(cs[o/4+6]+=s)}return f+r.byteLength}else{const r=t.offset,o=t.count;return cs[s+6]=r,Cs[i+14]=o,Cs[i+15]=Ts,f+as}else{const r=t.left,o=t.right,a=t.splitAxis;let h;if(h=gi(f+as,r),h/4>Ze)throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return cs[s+6]=h/4,h=gi(h,o),cs[s+7]=a,h}}function He(f,t){const s=(f.index?f.index.count:f.attributes.position.count)/3,i=s>2**16,e=i?4:2,n=t?new SharedArrayBuffer(s*e):new ArrayBuffer(s*e),r=i?new Uint32Array(n):new Uint16Array(n);for(let o=0,a=r.length;o<a;o++)r[o]=o;return r}function Je(f,t,s,i,e){const{maxDepth:n,verbose:r,maxLeafTris:o,strategy:a,onProgress:h,indirect:c}=e,u=f._indirectBuffer,l=f.geometry,d=l.index?l.index.array:null,p=c?ve:Ye,y=vt(l),x=new Float32Array(6);let m=!1;const g=new mi;return yi(t,s,i,g.boundingData,x),_(g,s,i,x),g;function b(w){h&&h(w/y)}function _(w,A,z,S=null,T=0){if(!m&&T>=n&&(m=!0,r&&(console.warn(`MeshBVH: Max depth of ${n} reached when generating BVH. Consider increasing maxDepth.`),console.warn(l))),z<=o||T>=n)return b(A+z),w.offset=A,w.count=z,w;const B=We(w.boundingData,S,t,A,z,a);if(B.axis===-1)return b(A+z),w.offset=A,w.count=z,w;const C=p(u,d,t,A,z,B);if(C===A||C===A+z)b(A+z),w.offset=A,w.count=z;else{w.splitAxis=B.axis;const P=new mi,E=A,F=C-A;w.left=P,yi(t,E,F,P.boundingData,x),_(P,E,F,x,T+1);const U=new mi,k=C,j=z-F;w.right=U,yi(t,k,j,U.boundingData,x),_(U,k,j,x,T+1)}return w}}function je(f,t){const s=f.geometry;t.indirect&&(f._indirectBuffer=He(s,t.useSharedArrayBuffer),qe(s,t.range)&&!t.verbose&&console.warn('MeshBVH: Provided geometry contains groups or a range that do not fully span the vertex contents while using the "indirect" option. BVH may incorrectly report intersections on unrendered portions of the geometry.')),f._indirectBuffer||Ne(s,t);const i=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,e=De(s),n=t.indirect?Gi(s,t.range):Qi(s,t.range);f._roots=n.map(r=>{const o=Je(f,e,r.offset,r.count,t),a=xi(o),h=new i(as*a);return $e(0,o,h),h})}class xt{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(t,s){let i=1/0,e=-1/0;for(let n=0,r=t.length;n<r;n++){const a=t[n][s];i=a<i?a:i,e=a>e?a:e}this.min=i,this.max=e}setFromPoints(t,s){let i=1/0,e=-1/0;for(let n=0,r=s.length;n<r;n++){const o=s[n],a=t.dot(o);i=a<i?a:i,e=a>e?a:e}this.min=i,this.max=e}isSeparated(t){return this.min>t.max||t.min>this.max}}xt.prototype.setFromBox=(function(){const f=new M;return function(s,i){const e=i.min,n=i.max;let r=1/0,o=-1/0;for(let a=0;a<=1;a++)for(let h=0;h<=1;h++)for(let c=0;c<=1;c++){f.x=e.x*a+n.x*(1-a),f.y=e.y*h+n.y*(1-h),f.z=e.z*c+n.z*(1-c);const u=s.dot(f);r=Math.min(u,r),o=Math.max(u,o)}this.min=r,this.max=o}})();const Ge=(function(){const f=new M,t=new M,s=new M;return function(e,n,r){const o=e.start,a=f,h=n.start,c=t;s.subVectors(o,h),f.subVectors(e.end,e.start),t.subVectors(n.end,n.start);const u=s.dot(c),l=c.dot(a),d=c.dot(c),p=s.dot(a),x=a.dot(a)*d-l*l;let m,g;x!==0?m=(u*l-p*d)/x:m=0,g=(u+m*l)/d,r.x=m,r.y=g}})(),wi=(function(){const f=new W,t=new M,s=new M;return function(e,n,r,o){Ge(e,n,f);let a=f.x,h=f.y;if(a>=0&&a<=1&&h>=0&&h<=1){e.at(a,r),n.at(h,o);return}else if(a>=0&&a<=1){h<0?n.at(0,o):n.at(1,o),e.closestPointToPoint(o,!0,r);return}else if(h>=0&&h<=1){a<0?e.at(0,r):e.at(1,r),n.closestPointToPoint(r,!0,o);return}else{let c;a<0?c=e.start:c=e.end;let u;h<0?u=n.start:u=n.end;const l=t,d=s;if(e.closestPointToPoint(u,!0,t),n.closestPointToPoint(c,!0,s),l.distanceToSquared(u)<=d.distanceToSquared(c)){r.copy(l),o.copy(u);return}else{r.copy(c),o.copy(d);return}}}})(),Qe=(function(){const f=new M,t=new M,s=new Zi,i=new yt;return function(n,r){const{radius:o,center:a}=n,{a:h,b:c,c:u}=r;if(i.start=h,i.end=c,i.closestPointToPoint(a,!0,f).distanceTo(a)<=o||(i.start=h,i.end=u,i.closestPointToPoint(a,!0,f).distanceTo(a)<=o)||(i.start=c,i.end=u,i.closestPointToPoint(a,!0,f).distanceTo(a)<=o))return!0;const y=r.getPlane(s);if(Math.abs(y.distanceToPoint(a))<=o){const m=y.projectPoint(a,t);if(r.containsPoint(m))return!0}return!1}})(),Ke=1e-15;function bi(f){return Math.abs(f)<Ke}class ot extends G{constructor(...t){super(...t),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new M),this.satBounds=new Array(4).fill().map(()=>new xt),this.points=[this.a,this.b,this.c],this.sphere=new Li,this.plane=new Zi,this.needsUpdate=!0}intersectsSphere(t){return Qe(t,this)}update(){const t=this.a,s=this.b,i=this.c,e=this.points,n=this.satAxes,r=this.satBounds,o=n[0],a=r[0];this.getNormal(o),a.setFromPoints(o,e);const h=n[1],c=r[1];h.subVectors(t,s),c.setFromPoints(h,e);const u=n[2],l=r[2];u.subVectors(s,i),l.setFromPoints(u,e);const d=n[3],p=r[3];d.subVectors(i,t),p.setFromPoints(d,e),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(o,t),this.needsUpdate=!1}}ot.prototype.closestPointToSegment=(function(){const f=new M,t=new M,s=new yt;return function(e,n=null,r=null){const{start:o,end:a}=e,h=this.points;let c,u=1/0;for(let l=0;l<3;l++){const d=(l+1)%3;s.start.copy(h[l]),s.end.copy(h[d]),wi(s,e,f,t),c=f.distanceToSquared(t),c<u&&(u=c,n&&n.copy(f),r&&r.copy(t))}return this.closestPointToPoint(o,f),c=o.distanceToSquared(f),c<u&&(u=c,n&&n.copy(f),r&&r.copy(o)),this.closestPointToPoint(a,f),c=a.distanceToSquared(f),c<u&&(u=c,n&&n.copy(f),r&&r.copy(a)),Math.sqrt(u)}})(),ot.prototype.intersectsTriangle=(function(){const f=new ot,t=new Array(3),s=new Array(3),i=new xt,e=new xt,n=new M,r=new M,o=new M,a=new M,h=new M,c=new yt,u=new yt,l=new yt,d=new M;function p(y,x,m){const g=y.points;let b=0,_=-1;for(let w=0;w<3;w++){const{start:A,end:z}=c;A.copy(g[w]),z.copy(g[(w+1)%3]),c.delta(r);const S=bi(x.distanceToPoint(A));if(bi(x.normal.dot(r))&&S){m.copy(c),b=2;break}const T=x.intersectLine(c,d);if(!T&&S&&d.copy(A),(T||S)&&!bi(d.distanceTo(z))){if(b<=1)(b===1?m.start:m.end).copy(d),S&&(_=b);else if(b>=2){(_===1?m.start:m.end).copy(d),b=2;break}if(b++,b===2&&_===-1)break}}return b}return function(x,m=null,g=!1){this.needsUpdate&&this.update(),x.isExtendedTriangle?x.needsUpdate&&x.update():(f.copy(x),f.update(),x=f);const b=this.plane,_=x.plane;if(Math.abs(b.normal.dot(_.normal))>1-1e-10){const w=this.satBounds,A=this.satAxes;s[0]=x.a,s[1]=x.b,s[2]=x.c;for(let T=0;T<4;T++){const B=w[T],C=A[T];if(i.setFromPoints(C,s),B.isSeparated(i))return!1}const z=x.satBounds,S=x.satAxes;t[0]=this.a,t[1]=this.b,t[2]=this.c;for(let T=0;T<4;T++){const B=z[T],C=S[T];if(i.setFromPoints(C,t),B.isSeparated(i))return!1}for(let T=0;T<4;T++){const B=A[T];for(let C=0;C<4;C++){const P=S[C];if(n.crossVectors(B,P),i.setFromPoints(n,t),e.setFromPoints(n,s),i.isSeparated(e))return!1}}return m&&(g||console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),m.start.set(0,0,0),m.end.set(0,0,0)),!0}else{const w=p(this,_,u);if(w===1&&x.containsPoint(u.end))return m&&(m.start.copy(u.end),m.end.copy(u.end)),!0;if(w!==2)return!1;const A=p(x,b,l);if(A===1&&this.containsPoint(l.end))return m&&(m.start.copy(l.end),m.end.copy(l.end)),!0;if(A!==2)return!1;if(u.delta(o),l.delta(a),o.dot(a)<0){let E=l.start;l.start=l.end,l.end=E}const z=u.start.dot(o),S=u.end.dot(o),T=l.start.dot(o),B=l.end.dot(o),C=S<T,P=z<B;return z!==B&&T!==S&&C===P?!1:(m&&(h.subVectors(u.start,l.start),h.dot(o)>0?m.start.copy(u.start):m.start.copy(l.start),h.subVectors(u.end,l.end),h.dot(o)<0?m.end.copy(u.end):m.end.copy(l.end)),!0)}}})(),ot.prototype.distanceToPoint=(function(){const f=new M;return function(s){return this.closestPointToPoint(s,f),s.distanceTo(f)}})(),ot.prototype.distanceToTriangle=(function(){const f=new M,t=new M,s=["a","b","c"],i=new yt,e=new yt;return function(r,o=null,a=null){const h=o||a?i:null;if(this.intersectsTriangle(r,h))return(o||a)&&(o&&h.getCenter(o),a&&h.getCenter(a)),0;let c=1/0;for(let u=0;u<3;u++){let l;const d=s[u],p=r[d];this.closestPointToPoint(p,f),l=p.distanceToSquared(f),l<c&&(c=l,o&&o.copy(f),a&&a.copy(p));const y=this[d];r.closestPointToPoint(y,f),l=y.distanceToSquared(f),l<c&&(c=l,o&&o.copy(y),a&&a.copy(f))}for(let u=0;u<3;u++){const l=s[u],d=s[(u+1)%3];i.set(this[l],this[d]);for(let p=0;p<3;p++){const y=s[p],x=s[(p+1)%3];e.set(r[y],r[x]),wi(i,e,f,t);const m=f.distanceToSquared(t);m<c&&(c=m,o&&o.copy(f),a&&a.copy(t))}}return Math.sqrt(c)}})();class Y{constructor(t,s,i){this.isOrientedBox=!0,this.min=new M,this.max=new M,this.matrix=new D,this.invMatrix=new D,this.points=new Array(8).fill().map(()=>new M),this.satAxes=new Array(3).fill().map(()=>new M),this.satBounds=new Array(3).fill().map(()=>new xt),this.alignedSatBounds=new Array(3).fill().map(()=>new xt),this.needsUpdate=!1,t&&this.min.copy(t),s&&this.max.copy(s),i&&this.matrix.copy(i)}set(t,s,i){this.min.copy(t),this.max.copy(s),this.matrix.copy(i),this.needsUpdate=!0}copy(t){this.min.copy(t.min),this.max.copy(t.max),this.matrix.copy(t.matrix),this.needsUpdate=!0}}Y.prototype.update=(function(){return function(){const t=this.matrix,s=this.min,i=this.max,e=this.points;for(let h=0;h<=1;h++)for(let c=0;c<=1;c++)for(let u=0;u<=1;u++){const l=1*h|2*c|4*u,d=e[l];d.x=h?i.x:s.x,d.y=c?i.y:s.y,d.z=u?i.z:s.z,d.applyMatrix4(t)}const n=this.satBounds,r=this.satAxes,o=e[0];for(let h=0;h<3;h++){const c=r[h],u=n[h],l=1<<h,d=e[l];c.subVectors(o,d),u.setFromPoints(c,e)}const a=this.alignedSatBounds;a[0].setFromPointsField(e,"x"),a[1].setFromPointsField(e,"y"),a[2].setFromPointsField(e,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}})(),Y.prototype.intersectsBox=(function(){const f=new xt;return function(s){this.needsUpdate&&this.update();const i=s.min,e=s.max,n=this.satBounds,r=this.satAxes,o=this.alignedSatBounds;if(f.min=i.x,f.max=e.x,o[0].isSeparated(f)||(f.min=i.y,f.max=e.y,o[1].isSeparated(f))||(f.min=i.z,f.max=e.z,o[2].isSeparated(f)))return!1;for(let a=0;a<3;a++){const h=r[a],c=n[a];if(f.setFromBox(h,s),c.isSeparated(f))return!1}return!0}})(),Y.prototype.intersectsTriangle=(function(){const f=new ot,t=new Array(3),s=new xt,i=new xt,e=new M;return function(r){this.needsUpdate&&this.update(),r.isExtendedTriangle?r.needsUpdate&&r.update():(f.copy(r),f.update(),r=f);const o=this.satBounds,a=this.satAxes;t[0]=r.a,t[1]=r.b,t[2]=r.c;for(let l=0;l<3;l++){const d=o[l],p=a[l];if(s.setFromPoints(p,t),d.isSeparated(s))return!1}const h=r.satBounds,c=r.satAxes,u=this.points;for(let l=0;l<3;l++){const d=h[l],p=c[l];if(s.setFromPoints(p,u),d.isSeparated(s))return!1}for(let l=0;l<3;l++){const d=a[l];for(let p=0;p<4;p++){const y=c[p];if(e.crossVectors(d,y),s.setFromPoints(e,t),i.setFromPoints(e,u),s.isSeparated(i))return!1}}return!0}})(),Y.prototype.closestPointToPoint=(function(){return function(t,s){return this.needsUpdate&&this.update(),s.copy(t).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),s}})(),Y.prototype.distanceToPoint=(function(){const f=new M;return function(s){return this.closestPointToPoint(s,f),s.distanceTo(f)}})(),Y.prototype.distanceToBox=(function(){const f=["x","y","z"],t=new Array(12).fill().map(()=>new yt),s=new Array(12).fill().map(()=>new yt),i=new M,e=new M;return function(r,o=0,a=null,h=null){if(this.needsUpdate&&this.update(),this.intersectsBox(r))return(a||h)&&(r.getCenter(e),this.closestPointToPoint(e,i),r.closestPointToPoint(i,e),a&&a.copy(i),h&&h.copy(e)),0;const c=o*o,u=r.min,l=r.max,d=this.points;let p=1/0;for(let x=0;x<8;x++){const m=d[x];e.copy(m).clamp(u,l);const g=m.distanceToSquared(e);if(g<p&&(p=g,a&&a.copy(m),h&&h.copy(e),g<c))return Math.sqrt(g)}let y=0;for(let x=0;x<3;x++)for(let m=0;m<=1;m++)for(let g=0;g<=1;g++){const b=(x+1)%3,_=(x+2)%3,w=m<<b|g<<_,A=1<<x|m<<b|g<<_,z=d[w],S=d[A];t[y].set(z,S);const B=f[x],C=f[b],P=f[_],E=s[y],F=E.start,U=E.end;F[B]=u[B],F[C]=m?u[C]:l[C],F[P]=g?u[P]:l[C],U[B]=l[B],U[C]=m?u[C]:l[C],U[P]=g?u[P]:l[C],y++}for(let x=0;x<=1;x++)for(let m=0;m<=1;m++)for(let g=0;g<=1;g++){e.x=x?l.x:u.x,e.y=m?l.y:u.y,e.z=g?l.z:u.z,this.closestPointToPoint(e,i);const b=e.distanceToSquared(i);if(b<p&&(p=b,a&&a.copy(i),h&&h.copy(e),b<c))return Math.sqrt(b)}for(let x=0;x<12;x++){const m=t[x];for(let g=0;g<12;g++){const b=s[g];wi(m,b,i,e);const _=i.distanceToSquared(e);if(_<p&&(p=_,a&&a.copy(i),h&&h.copy(e),_<c))return Math.sqrt(_)}}return Math.sqrt(p)}})();class _i{constructor(t){this._getNewPrimitive=t,this._primitives=[]}getPrimitive(){const t=this._primitives;return t.length===0?this._getNewPrimitive():t.pop()}releasePrimitive(t){this._primitives.push(t)}}class tn extends _i{constructor(){super(()=>new ot)}}const it=new tn;class sn{constructor(){this.float32Array=null,this.uint16Array=null,this.uint32Array=null;const t=[];let s=null;this.setBuffer=i=>{s&&t.push(s),s=i,this.float32Array=new Float32Array(i),this.uint16Array=new Uint16Array(i),this.uint32Array=new Uint32Array(i)},this.clearBuffer=()=>{s=null,this.float32Array=null,this.uint16Array=null,this.uint32Array=null,t.length!==0&&this.setBuffer(t.pop())}}}const I=new sn;let zt,Zt;const $t=[],Es=new _i(()=>new X);function en(f,t,s,i,e,n){zt=Es.getPrimitive(),Zt=Es.getPrimitive(),$t.push(zt,Zt),I.setBuffer(f._roots[t]);const r=Mi(0,f.geometry,s,i,e,n);I.clearBuffer(),Es.releasePrimitive(zt),Es.releasePrimitive(Zt),$t.pop(),$t.pop();const o=$t.length;return o>0&&(Zt=$t[o-1],zt=$t[o-2]),r}function Mi(f,t,s,i,e=null,n=0,r=0){const{float32Array:o,uint16Array:a,uint32Array:h}=I;let c=f*2;if(Z(c,a)){const l=J(f,h),d=K(c,a);return V(f,o,zt),i(l,d,!1,r,n+f,zt)}else{let B=function(P){const{uint16Array:E,uint32Array:F}=I;let U=P*2;for(;!Z(U,E);)P=tt(P),U=P*2;return J(P,F)},C=function(P){const{uint16Array:E,uint32Array:F}=I;let U=P*2;for(;!Z(U,E);)P=st(P,F),U=P*2;return J(P,F)+K(U,E)};const l=tt(f),d=st(f,h);let p=l,y=d,x,m,g,b;if(e&&(g=zt,b=Zt,V(p,o,g),V(y,o,b),x=e(g),m=e(b),m<x)){p=d,y=l;const P=x;x=m,m=P,g=b}g||(g=zt,V(p,o,g));const _=Z(p*2,a),w=s(g,_,x,r+1,n+p);let A;if(w===Ji){const P=B(p),F=C(p)-P;A=i(P,F,!0,r+1,n+p,g)}else A=w&&Mi(p,t,s,i,e,n,r+1);if(A)return!0;b=Zt,V(y,o,b);const z=Z(y*2,a),S=s(b,z,m,r+1,n+y);let T;if(S===Ji){const P=B(y),F=C(y)-P;T=i(P,F,!0,r+1,n+y,b)}else T=S&&Mi(y,t,s,i,e,n,r+1);return!!T}}const ls=new M,zi=new M;function nn(f,t,s={},i=0,e=1/0){const n=i*i,r=e*e;let o=1/0,a=null;if(f.shapecast({boundsTraverseOrder:c=>(ls.copy(t).clamp(c.min,c.max),ls.distanceToSquared(t)),intersectsBounds:(c,u,l)=>l<o&&l<r,intersectsTriangle:(c,u)=>{c.closestPointToPoint(t,ls);const l=t.distanceToSquared(ls);return l<o&&(zi.copy(ls),o=l,a=u),l<n}}),o===1/0)return null;const h=Math.sqrt(o);return s.point?s.point.copy(zi):s.point=zi.clone(),s.distance=h,s.faceIndex=a,s}const Fs=parseInt("179")>=169,rn=parseInt("179")<=161,Et=new M,Ft=new M,Rt=new M,Rs=new W,Us=new W,ks=new W,re=new M,oe=new M,ae=new M,us=new M;function on(f,t,s,i,e,n,r,o){let a;if(n===1?a=f.intersectTriangle(i,s,t,!0,e):a=f.intersectTriangle(t,s,i,n!==2,e),a===null)return null;const h=f.origin.distanceTo(e);return h<r||h>o?null:{distance:h,point:e.clone()}}function an(f,t,s,i,e,n,r,o,a,h,c){Et.fromBufferAttribute(t,n),Ft.fromBufferAttribute(t,r),Rt.fromBufferAttribute(t,o);const u=on(f,Et,Ft,Rt,us,a,h,c);if(u){if(i){Rs.fromBufferAttribute(i,n),Us.fromBufferAttribute(i,r),ks.fromBufferAttribute(i,o),u.uv=new W;const d=G.getInterpolation(us,Et,Ft,Rt,Rs,Us,ks,u.uv);Fs||(u.uv=d)}if(e){Rs.fromBufferAttribute(e,n),Us.fromBufferAttribute(e,r),ks.fromBufferAttribute(e,o),u.uv1=new W;const d=G.getInterpolation(us,Et,Ft,Rt,Rs,Us,ks,u.uv1);Fs||(u.uv1=d),rn&&(u.uv2=u.uv1)}if(s){re.fromBufferAttribute(s,n),oe.fromBufferAttribute(s,r),ae.fromBufferAttribute(s,o),u.normal=new M;const d=G.getInterpolation(us,Et,Ft,Rt,re,oe,ae,u.normal);u.normal.dot(f.direction)>0&&u.normal.multiplyScalar(-1),Fs||(u.normal=d)}const l={a:n,b:r,c:o,normal:new M,materialIndex:0};if(G.getNormal(Et,Ft,Rt,l.normal),u.face=l,u.faceIndex=n,Fs){const d=new M;G.getBarycoord(us,Et,Ft,Rt,d),u.barycoord=d}}return u}function Is(f,t,s,i,e,n,r){const o=i*3;let a=o+0,h=o+1,c=o+2;const u=f.index;f.index&&(a=u.getX(a),h=u.getX(h),c=u.getX(c));const{position:l,normal:d,uv:p,uv1:y}=f.attributes,x=an(s,l,d,p,y,a,h,c,t,n,r);return x?(x.faceIndex=i,e&&e.push(x),x):null}function N(f,t,s,i){const e=f.a,n=f.b,r=f.c;let o=t,a=t+1,h=t+2;s&&(o=s.getX(o),a=s.getX(a),h=s.getX(h)),e.x=i.getX(o),e.y=i.getY(o),e.z=i.getZ(o),n.x=i.getX(a),n.y=i.getY(a),n.z=i.getZ(a),r.x=i.getX(h),r.y=i.getY(h),r.z=i.getZ(h)}function hn(f,t,s,i,e,n,r,o){const{geometry:a,_indirectBuffer:h}=f;for(let c=i,u=i+e;c<u;c++)Is(a,t,s,c,n,r,o)}function cn(f,t,s,i,e,n,r){const{geometry:o,_indirectBuffer:a}=f;let h=1/0,c=null;for(let u=i,l=i+e;u<l;u++){let d;d=Is(o,t,s,u,null,n,r),d&&d.distance<h&&(c=d,h=d.distance)}return c}function ln(f,t,s,i,e,n,r){const{geometry:o}=s,{index:a}=o,h=o.attributes.position;for(let c=f,u=t+f;c<u;c++){let l;if(l=c,N(r,l*3,a,h),r.needsUpdate=!0,i(r,l,e,n))return!0}return!1}function un(f,t=null){t&&Array.isArray(t)&&(t=new Set(t));const s=f.geometry,i=s.index?s.index.array:null,e=s.attributes.position;let n,r,o,a,h=0;const c=f._roots;for(let l=0,d=c.length;l<d;l++)n=c[l],r=new Uint32Array(n),o=new Uint16Array(n),a=new Float32Array(n),u(0,h),h+=n.byteLength;function u(l,d,p=!1){const y=l*2;if(o[y+15]===Ts){const m=r[l+6],g=o[y+14];let b=1/0,_=1/0,w=1/0,A=-1/0,z=-1/0,S=-1/0;for(let T=3*m,B=3*(m+g);T<B;T++){let C=i[T];const P=e.getX(C),E=e.getY(C),F=e.getZ(C);P<b&&(b=P),P>A&&(A=P),E<_&&(_=E),E>z&&(z=E),F<w&&(w=F),F>S&&(S=F)}return a[l+0]!==b||a[l+1]!==_||a[l+2]!==w||a[l+3]!==A||a[l+4]!==z||a[l+5]!==S?(a[l+0]=b,a[l+1]=_,a[l+2]=w,a[l+3]=A,a[l+4]=z,a[l+5]=S,!0):!1}else{const m=l+8,g=r[l+6],b=m+d,_=g+d;let w=p,A=!1,z=!1;t?w||(A=t.has(b),z=t.has(_),w=!A&&!z):(A=!0,z=!0);const S=w||A,T=w||z;let B=!1;S&&(B=u(m,d,w));let C=!1;T&&(C=u(g,d,w));const P=B||C;if(P)for(let E=0;E<3;E++){const F=m+E,U=g+E,k=a[F],j=a[F+3],ct=a[U],lt=a[U+3];a[l+E]=k<ct?k:ct,a[l+E+3]=j>lt?j:lt}return P}}}function At(f,t,s,i,e){let n,r,o,a,h,c;const u=1/s.direction.x,l=1/s.direction.y,d=1/s.direction.z,p=s.origin.x,y=s.origin.y,x=s.origin.z;let m=t[f],g=t[f+3],b=t[f+1],_=t[f+3+1],w=t[f+2],A=t[f+3+2];return u>=0?(n=(m-p)*u,r=(g-p)*u):(n=(g-p)*u,r=(m-p)*u),l>=0?(o=(b-y)*l,a=(_-y)*l):(o=(_-y)*l,a=(b-y)*l),n>a||o>r||((o>n||isNaN(n))&&(n=o),(a<r||isNaN(r))&&(r=a),d>=0?(h=(w-x)*d,c=(A-x)*d):(h=(A-x)*d,c=(w-x)*d),n>c||h>r)?!1:((h>n||n!==n)&&(n=h),(c<r||r!==r)&&(r=c),n<=e&&r>=i)}function fn(f,t,s,i,e,n,r,o){const{geometry:a,_indirectBuffer:h}=f;for(let c=i,u=i+e;c<u;c++){let l=h?h[c]:c;Is(a,t,s,l,n,r,o)}}function dn(f,t,s,i,e,n,r){const{geometry:o,_indirectBuffer:a}=f;let h=1/0,c=null;for(let u=i,l=i+e;u<l;u++){let d;d=Is(o,t,s,a?a[u]:u,null,n,r),d&&d.distance<h&&(c=d,h=d.distance)}return c}function pn(f,t,s,i,e,n,r){const{geometry:o}=s,{index:a}=o,h=o.attributes.position;for(let c=f,u=t+f;c<u;c++){let l;if(l=s.resolveTriangleIndex(c),N(r,l*3,a,h),r.needsUpdate=!0,i(r,l,e,n))return!0}return!1}function yn(f,t,s,i,e,n,r){I.setBuffer(f._roots[t]),Ai(0,f,s,i,e,n,r),I.clearBuffer()}function Ai(f,t,s,i,e,n,r){const{float32Array:o,uint16Array:a,uint32Array:h}=I,c=f*2;if(Z(c,a)){const l=J(f,h),d=K(c,a);hn(t,s,i,l,d,e,n,r)}else{const l=tt(f);At(l,o,i,n,r)&&Ai(l,t,s,i,e,n,r);const d=st(f,h);At(d,o,i,n,r)&&Ai(d,t,s,i,e,n,r)}}const mn=["x","y","z"];function xn(f,t,s,i,e,n){I.setBuffer(f._roots[t]);const r=Si(0,f,s,i,e,n);return I.clearBuffer(),r}function Si(f,t,s,i,e,n){const{float32Array:r,uint16Array:o,uint32Array:a}=I;let h=f*2;if(Z(h,o)){const u=J(f,a),l=K(h,o);return cn(t,s,i,u,l,e,n)}else{const u=ie(f,a),l=mn[u],p=i.direction[l]>=0;let y,x;p?(y=tt(f),x=st(f,a)):(y=st(f,a),x=tt(f));const g=At(y,r,i,e,n)?Si(y,t,s,i,e,n):null;if(g){const w=g.point[l];if(p?w<=r[x+u]:w>=r[x+u+3])return g}const _=At(x,r,i,e,n)?Si(x,t,s,i,e,n):null;return g&&_?g.distance<=_.distance?g:_:g||_||null}}const Vs=new X,Ht=new ot,Jt=new ot,fs=new D,he=new Y,Ls=new Y;function gn(f,t,s,i){I.setBuffer(f._roots[t]);const e=Ti(0,f,s,i);return I.clearBuffer(),e}function Ti(f,t,s,i,e=null){const{float32Array:n,uint16Array:r,uint32Array:o}=I;let a=f*2;if(e===null&&(s.boundingBox||s.computeBoundingBox(),he.set(s.boundingBox.min,s.boundingBox.max,i),e=he),Z(a,r)){const c=t.geometry,u=c.index,l=c.attributes.position,d=s.index,p=s.attributes.position,y=J(f,o),x=K(a,r);if(fs.copy(i).invert(),s.boundsTree)return V(f,n,Ls),Ls.matrix.copy(fs),Ls.needsUpdate=!0,s.boundsTree.shapecast({intersectsBounds:g=>Ls.intersectsBox(g),intersectsTriangle:g=>{g.a.applyMatrix4(i),g.b.applyMatrix4(i),g.c.applyMatrix4(i),g.needsUpdate=!0;for(let b=y*3,_=(x+y)*3;b<_;b+=3)if(N(Jt,b,u,l),Jt.needsUpdate=!0,g.intersectsTriangle(Jt))return!0;return!1}});for(let m=y*3,g=(x+y)*3;m<g;m+=3){N(Ht,m,u,l),Ht.a.applyMatrix4(fs),Ht.b.applyMatrix4(fs),Ht.c.applyMatrix4(fs),Ht.needsUpdate=!0;for(let b=0,_=d.count;b<_;b+=3)if(N(Jt,b,d,p),Jt.needsUpdate=!0,Ht.intersectsTriangle(Jt))return!0}}else{const c=f+8,u=o[f+6];return V(c,n,Vs),!!(e.intersectsBox(Vs)&&Ti(c,t,s,i,e)||(V(u,n,Vs),e.intersectsBox(Vs)&&Ti(u,t,s,i,e)))}}const Ns=new D,Bi=new Y,ds=new Y,wn=new M,bn=new M,_n=new M,Mn=new M;function zn(f,t,s,i={},e={},n=0,r=1/0){t.boundingBox||t.computeBoundingBox(),Bi.set(t.boundingBox.min,t.boundingBox.max,s),Bi.needsUpdate=!0;const o=f.geometry,a=o.attributes.position,h=o.index,c=t.attributes.position,u=t.index,l=it.getPrimitive(),d=it.getPrimitive();let p=wn,y=bn,x=null,m=null;e&&(x=_n,m=Mn);let g=1/0,b=null,_=null;return Ns.copy(s).invert(),ds.matrix.copy(Ns),f.shapecast({boundsTraverseOrder:w=>Bi.distanceToBox(w),intersectsBounds:(w,A,z)=>z<g&&z<r?(A&&(ds.min.copy(w.min),ds.max.copy(w.max),ds.needsUpdate=!0),!0):!1,intersectsRange:(w,A)=>{if(t.boundsTree)return t.boundsTree.shapecast({boundsTraverseOrder:S=>ds.distanceToBox(S),intersectsBounds:(S,T,B)=>B<g&&B<r,intersectsRange:(S,T)=>{for(let B=S,C=S+T;B<C;B++){N(d,3*B,u,c),d.a.applyMatrix4(s),d.b.applyMatrix4(s),d.c.applyMatrix4(s),d.needsUpdate=!0;for(let P=w,E=w+A;P<E;P++){N(l,3*P,h,a),l.needsUpdate=!0;const F=l.distanceToTriangle(d,p,x);if(F<g&&(y.copy(p),m&&m.copy(x),g=F,b=P,_=B),F<n)return!0}}}});{const z=vt(t);for(let S=0,T=z;S<T;S++){N(d,3*S,u,c),d.a.applyMatrix4(s),d.b.applyMatrix4(s),d.c.applyMatrix4(s),d.needsUpdate=!0;for(let B=w,C=w+A;B<C;B++){N(l,3*B,h,a),l.needsUpdate=!0;const P=l.distanceToTriangle(d,p,x);if(P<g&&(y.copy(p),m&&m.copy(x),g=P,b=B,_=S),P<n)return!0}}}}}),it.releasePrimitive(l),it.releasePrimitive(d),g===1/0?null:(i.point?i.point.copy(y):i.point=y.clone(),i.distance=g,i.faceIndex=b,e&&(e.point?e.point.copy(m):e.point=m.clone(),e.point.applyMatrix4(Ns),y.applyMatrix4(Ns),e.distance=y.sub(e.point).length(),e.faceIndex=_),i)}function An(f,t=null){t&&Array.isArray(t)&&(t=new Set(t));const s=f.geometry,i=s.index?s.index.array:null,e=s.attributes.position;let n,r,o,a,h=0;const c=f._roots;for(let l=0,d=c.length;l<d;l++)n=c[l],r=new Uint32Array(n),o=new Uint16Array(n),a=new Float32Array(n),u(0,h),h+=n.byteLength;function u(l,d,p=!1){const y=l*2;if(o[y+15]===Ts){const m=r[l+6],g=o[y+14];let b=1/0,_=1/0,w=1/0,A=-1/0,z=-1/0,S=-1/0;for(let T=m,B=m+g;T<B;T++){const C=3*f.resolveTriangleIndex(T);for(let P=0;P<3;P++){let E=C+P;E=i?i[E]:E;const F=e.getX(E),U=e.getY(E),k=e.getZ(E);F<b&&(b=F),F>A&&(A=F),U<_&&(_=U),U>z&&(z=U),k<w&&(w=k),k>S&&(S=k)}}return a[l+0]!==b||a[l+1]!==_||a[l+2]!==w||a[l+3]!==A||a[l+4]!==z||a[l+5]!==S?(a[l+0]=b,a[l+1]=_,a[l+2]=w,a[l+3]=A,a[l+4]=z,a[l+5]=S,!0):!1}else{const m=l+8,g=r[l+6],b=m+d,_=g+d;let w=p,A=!1,z=!1;t?w||(A=t.has(b),z=t.has(_),w=!A&&!z):(A=!0,z=!0);const S=w||A,T=w||z;let B=!1;S&&(B=u(m,d,w));let C=!1;T&&(C=u(g,d,w));const P=B||C;if(P)for(let E=0;E<3;E++){const F=m+E,U=g+E,k=a[F],j=a[F+3],ct=a[U],lt=a[U+3];a[l+E]=k<ct?k:ct,a[l+E+3]=j>lt?j:lt}return P}}}function Sn(f,t,s,i,e,n,r){I.setBuffer(f._roots[t]),Pi(0,f,s,i,e,n,r),I.clearBuffer()}function Pi(f,t,s,i,e,n,r){const{float32Array:o,uint16Array:a,uint32Array:h}=I,c=f*2;if(Z(c,a)){const l=J(f,h),d=K(c,a);fn(t,s,i,l,d,e,n,r)}else{const l=tt(f);At(l,o,i,n,r)&&Pi(l,t,s,i,e,n,r);const d=st(f,h);At(d,o,i,n,r)&&Pi(d,t,s,i,e,n,r)}}const Tn=["x","y","z"];function Bn(f,t,s,i,e,n){I.setBuffer(f._roots[t]);const r=Ci(0,f,s,i,e,n);return I.clearBuffer(),r}function Ci(f,t,s,i,e,n){const{float32Array:r,uint16Array:o,uint32Array:a}=I;let h=f*2;if(Z(h,o)){const u=J(f,a),l=K(h,o);return dn(t,s,i,u,l,e,n)}else{const u=ie(f,a),l=Tn[u],p=i.direction[l]>=0;let y,x;p?(y=tt(f),x=st(f,a)):(y=st(f,a),x=tt(f));const g=At(y,r,i,e,n)?Ci(y,t,s,i,e,n):null;if(g){const w=g.point[l];if(p?w<=r[x+u]:w>=r[x+u+3])return g}const _=At(x,r,i,e,n)?Ci(x,t,s,i,e,n):null;return g&&_?g.distance<=_.distance?g:_:g||_||null}}const qs=new X,jt=new ot,Gt=new ot,ps=new D,ce=new Y,Ds=new Y;function Pn(f,t,s,i){I.setBuffer(f._roots[t]);const e=Ei(0,f,s,i);return I.clearBuffer(),e}function Ei(f,t,s,i,e=null){const{float32Array:n,uint16Array:r,uint32Array:o}=I;let a=f*2;if(e===null&&(s.boundingBox||s.computeBoundingBox(),ce.set(s.boundingBox.min,s.boundingBox.max,i),e=ce),Z(a,r)){const c=t.geometry,u=c.index,l=c.attributes.position,d=s.index,p=s.attributes.position,y=J(f,o),x=K(a,r);if(ps.copy(i).invert(),s.boundsTree)return V(f,n,Ds),Ds.matrix.copy(ps),Ds.needsUpdate=!0,s.boundsTree.shapecast({intersectsBounds:g=>Ds.intersectsBox(g),intersectsTriangle:g=>{g.a.applyMatrix4(i),g.b.applyMatrix4(i),g.c.applyMatrix4(i),g.needsUpdate=!0;for(let b=y,_=x+y;b<_;b++)if(N(Gt,3*t.resolveTriangleIndex(b),u,l),Gt.needsUpdate=!0,g.intersectsTriangle(Gt))return!0;return!1}});for(let m=y,g=x+y;m<g;m++){const b=t.resolveTriangleIndex(m);N(jt,3*b,u,l),jt.a.applyMatrix4(ps),jt.b.applyMatrix4(ps),jt.c.applyMatrix4(ps),jt.needsUpdate=!0;for(let _=0,w=d.count;_<w;_+=3)if(N(Gt,_,d,p),Gt.needsUpdate=!0,jt.intersectsTriangle(Gt))return!0}}else{const c=f+8,u=o[f+6];return V(c,n,qs),!!(e.intersectsBox(qs)&&Ei(c,t,s,i,e)||(V(u,n,qs),e.intersectsBox(qs)&&Ei(u,t,s,i,e)))}}const Os=new D,Fi=new Y,ys=new Y,Cn=new M,En=new M,Fn=new M,Rn=new M;function Un(f,t,s,i={},e={},n=0,r=1/0){t.boundingBox||t.computeBoundingBox(),Fi.set(t.boundingBox.min,t.boundingBox.max,s),Fi.needsUpdate=!0;const o=f.geometry,a=o.attributes.position,h=o.index,c=t.attributes.position,u=t.index,l=it.getPrimitive(),d=it.getPrimitive();let p=Cn,y=En,x=null,m=null;e&&(x=Fn,m=Rn);let g=1/0,b=null,_=null;return Os.copy(s).invert(),ys.matrix.copy(Os),f.shapecast({boundsTraverseOrder:w=>Fi.distanceToBox(w),intersectsBounds:(w,A,z)=>z<g&&z<r?(A&&(ys.min.copy(w.min),ys.max.copy(w.max),ys.needsUpdate=!0),!0):!1,intersectsRange:(w,A)=>{if(t.boundsTree){const z=t.boundsTree;return z.shapecast({boundsTraverseOrder:S=>ys.distanceToBox(S),intersectsBounds:(S,T,B)=>B<g&&B<r,intersectsRange:(S,T)=>{for(let B=S,C=S+T;B<C;B++){const P=z.resolveTriangleIndex(B);N(d,3*P,u,c),d.a.applyMatrix4(s),d.b.applyMatrix4(s),d.c.applyMatrix4(s),d.needsUpdate=!0;for(let E=w,F=w+A;E<F;E++){const U=f.resolveTriangleIndex(E);N(l,3*U,h,a),l.needsUpdate=!0;const k=l.distanceToTriangle(d,p,x);if(k<g&&(y.copy(p),m&&m.copy(x),g=k,b=E,_=B),k<n)return!0}}}})}else{const z=vt(t);for(let S=0,T=z;S<T;S++){N(d,3*S,u,c),d.a.applyMatrix4(s),d.b.applyMatrix4(s),d.c.applyMatrix4(s),d.needsUpdate=!0;for(let B=w,C=w+A;B<C;B++){const P=f.resolveTriangleIndex(B);N(l,3*P,h,a),l.needsUpdate=!0;const E=l.distanceToTriangle(d,p,x);if(E<g&&(y.copy(p),m&&m.copy(x),g=E,b=B,_=S),E<n)return!0}}}}}),it.releasePrimitive(l),it.releasePrimitive(d),g===1/0?null:(i.point?i.point.copy(y):i.point=y.clone(),i.distance=g,i.faceIndex=b,e&&(e.point?e.point.copy(m):e.point=m.clone(),e.point.applyMatrix4(Os),y.applyMatrix4(Os),e.distance=y.sub(e.point).length(),e.faceIndex=_),i)}function kn(){return typeof SharedArrayBuffer<"u"}const ms=new I.constructor,Ws=new I.constructor,St=new _i(()=>new X),Qt=new X,Kt=new X,Ri=new X,Ui=new X;let ki=!1;function In(f,t,s,i){if(ki)throw new Error("MeshBVH: Recursive calls to bvhcast not supported.");ki=!0;const e=f._roots,n=t._roots;let r,o=0,a=0;const h=new D().copy(s).invert();for(let c=0,u=e.length;c<u;c++){ms.setBuffer(e[c]),a=0;const l=St.getPrimitive();V(0,ms.float32Array,l),l.applyMatrix4(h);for(let d=0,p=n.length;d<p&&(Ws.setBuffer(n[d]),r=at(0,0,s,h,i,o,a,0,0,l),Ws.clearBuffer(),a+=n[d].length,!r);d++);if(St.releasePrimitive(l),ms.clearBuffer(),o+=e[c].length,r)break}return ki=!1,r}function at(f,t,s,i,e,n=0,r=0,o=0,a=0,h=null,c=!1){let u,l;c?(u=Ws,l=ms):(u=ms,l=Ws);const d=u.float32Array,p=u.uint32Array,y=u.uint16Array,x=l.float32Array,m=l.uint32Array,g=l.uint16Array,b=f*2,_=t*2,w=Z(b,y),A=Z(_,g);let z=!1;if(A&&w)c?z=e(J(t,m),K(t*2,g),J(f,p),K(f*2,y),a,r+t,o,n+f):z=e(J(f,p),K(f*2,y),J(t,m),K(t*2,g),o,n+f,a,r+t);else if(A){const S=St.getPrimitive();V(t,x,S),S.applyMatrix4(s);const T=tt(f),B=st(f,p);V(T,d,Qt),V(B,d,Kt);const C=S.intersectsBox(Qt),P=S.intersectsBox(Kt);z=C&&at(t,T,i,s,e,r,n,a,o+1,S,!c)||P&&at(t,B,i,s,e,r,n,a,o+1,S,!c),St.releasePrimitive(S)}else{const S=tt(t),T=st(t,m);V(S,x,Ri),V(T,x,Ui);const B=h.intersectsBox(Ri),C=h.intersectsBox(Ui);if(B&&C)z=at(f,S,s,i,e,n,r,o,a+1,h,c)||at(f,T,s,i,e,n,r,o,a+1,h,c);else if(B)if(w)z=at(f,S,s,i,e,n,r,o,a+1,h,c);else{const P=St.getPrimitive();P.copy(Ri).applyMatrix4(s);const E=tt(f),F=st(f,p);V(E,d,Qt),V(F,d,Kt);const U=P.intersectsBox(Qt),k=P.intersectsBox(Kt);z=U&&at(S,E,i,s,e,r,n,a,o+1,P,!c)||k&&at(S,F,i,s,e,r,n,a,o+1,P,!c),St.releasePrimitive(P)}else if(C)if(w)z=at(f,T,s,i,e,n,r,o,a+1,h,c);else{const P=St.getPrimitive();P.copy(Ui).applyMatrix4(s);const E=tt(f),F=st(f,p);V(E,d,Qt),V(F,d,Kt);const U=P.intersectsBox(Qt),k=P.intersectsBox(Kt);z=U&&at(T,E,i,s,e,r,n,a,o+1,P,!c)||k&&at(T,F,i,s,e,r,n,a,o+1,P,!c),St.releasePrimitive(P)}}return z}const Xs=new Y,le=new X,Vn={strategy:Hi,maxDepth:40,maxLeafTris:10,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,indirect:!1,verbose:!0,range:null};class Ys{static serialize(t,s={}){s={cloneBuffers:!0,...s};const i=t.geometry,e=t._roots,n=t._indirectBuffer,r=i.getIndex();let o;return s.cloneBuffers?o={roots:e.map(a=>a.slice()),index:r?r.array.slice():null,indirectBuffer:n?n.slice():null}:o={roots:e,index:r?r.array:null,indirectBuffer:n},o}static deserialize(t,s,i={}){i={setIndex:!0,indirect:!!t.indirectBuffer,...i};const{index:e,roots:n,indirectBuffer:r}=t,o=new Ys(s,{...i,[pi]:!0});if(o._roots=n,o._indirectBuffer=r||null,i.setIndex){const a=s.getIndex();if(a===null){const h=new ht(t.index,1,!1);s.setIndex(h)}else a.array!==e&&(a.array.set(e),a.needsUpdate=!0)}return o}get indirect(){return!!this._indirectBuffer}constructor(t,s={}){if(t.isBufferGeometry){if(t.index&&t.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.")}else throw new Error("MeshBVH: Only BufferGeometries are supported.");if(s=Object.assign({...Vn,[pi]:!1},s),s.useSharedArrayBuffer&&!kn())throw new Error("MeshBVH: SharedArrayBuffer is not available.");this.geometry=t,this._roots=null,this._indirectBuffer=null,s[pi]||(je(this,s),!t.boundingBox&&s.setBoundingBox&&(t.boundingBox=this.getBoundingBox(new X))),this.resolveTriangleIndex=s.indirect?i=>this._indirectBuffer[i]:i=>i}refit(t=null){return(this.indirect?An:un)(this,t)}traverse(t,s=0){const i=this._roots[s],e=new Uint32Array(i),n=new Uint16Array(i);r(0);function r(o,a=0){const h=o*2,c=n[h+15]===Ts;if(c){const u=e[o+6],l=n[h+14];t(a,c,new Float32Array(i,o*4,6),u,l)}else{const u=o+as/4,l=e[o+6],d=e[o+7];t(a,c,new Float32Array(i,o*4,6),d)||(r(u,a+1),r(l,a+1))}}}raycast(t,s=0,i=0,e=1/0){const n=this._roots,r=this.geometry,o=[],a=s.isMaterial,h=Array.isArray(s),c=r.groups,u=a?s.side:s,l=this.indirect?Sn:yn;for(let d=0,p=n.length;d<p;d++){const y=h?s[c[d].materialIndex].side:u,x=o.length;if(l(this,d,y,t,o,i,e),h){const m=c[d].materialIndex;for(let g=x,b=o.length;g<b;g++)o[g].face.materialIndex=m}}return o}raycastFirst(t,s=0,i=0,e=1/0){const n=this._roots,r=this.geometry,o=s.isMaterial,a=Array.isArray(s);let h=null;const c=r.groups,u=o?s.side:s,l=this.indirect?Bn:xn;for(let d=0,p=n.length;d<p;d++){const y=a?s[c[d].materialIndex].side:u,x=l(this,d,y,t,i,e);x!=null&&(h==null||x.distance<h.distance)&&(h=x,a&&(x.face.materialIndex=c[d].materialIndex))}return h}intersectsGeometry(t,s){let i=!1;const e=this._roots,n=this.indirect?Pn:gn;for(let r=0,o=e.length;r<o&&(i=n(this,r,t,s),!i);r++);return i}shapecast(t){const s=it.getPrimitive(),i=this.indirect?pn:ln;let{boundsTraverseOrder:e,intersectsBounds:n,intersectsRange:r,intersectsTriangle:o}=t;if(r&&o){const u=r;r=(l,d,p,y,x)=>u(l,d,p,y,x)?!0:i(l,d,this,o,p,y,s)}else r||(o?r=(u,l,d,p)=>i(u,l,this,o,d,p,s):r=(u,l,d)=>d);let a=!1,h=0;const c=this._roots;for(let u=0,l=c.length;u<l;u++){const d=c[u];if(a=en(this,u,n,r,e,h),a)break;h+=d.byteLength}return it.releasePrimitive(s),a}bvhcast(t,s,i){let{intersectsRanges:e,intersectsTriangles:n}=i;const r=it.getPrimitive(),o=this.geometry.index,a=this.geometry.attributes.position,h=this.indirect?p=>{const y=this.resolveTriangleIndex(p);N(r,y*3,o,a)}:p=>{N(r,p*3,o,a)},c=it.getPrimitive(),u=t.geometry.index,l=t.geometry.attributes.position,d=t.indirect?p=>{const y=t.resolveTriangleIndex(p);N(c,y*3,u,l)}:p=>{N(c,p*3,u,l)};if(n){const p=(y,x,m,g,b,_,w,A)=>{for(let z=m,S=m+g;z<S;z++){d(z),c.a.applyMatrix4(s),c.b.applyMatrix4(s),c.c.applyMatrix4(s),c.needsUpdate=!0;for(let T=y,B=y+x;T<B;T++)if(h(T),r.needsUpdate=!0,n(r,c,T,z,b,_,w,A))return!0}return!1};if(e){const y=e;e=function(x,m,g,b,_,w,A,z){return y(x,m,g,b,_,w,A,z)?!0:p(x,m,g,b,_,w,A,z)}}else e=p}return In(this,t,s,e)}intersectsBox(t,s){return Xs.set(t.min,t.max,s),Xs.needsUpdate=!0,this.shapecast({intersectsBounds:i=>Xs.intersectsBox(i),intersectsTriangle:i=>Xs.intersectsTriangle(i)})}intersectsSphere(t){return this.shapecast({intersectsBounds:s=>t.intersectsBox(s),intersectsTriangle:s=>s.intersectsSphere(t)})}closestPointToGeometry(t,s,i={},e={},n=0,r=1/0){return(this.indirect?Un:zn)(this,t,s,i,e,n,r)}closestPointToPoint(t,s={},i=0,e=1/0){return nn(this,t,s,i,e)}getBoundingBox(t){return t.makeEmpty(),this._roots.forEach(i=>{V(0,new Float32Array(i),le),t.union(le)}),t}}onmessage=({data:f})=>{let t=performance.now();function s(r){r=Math.min(r,1);const o=performance.now();o-t>=10&&r!==1&&(postMessage({error:null,serialized:null,position:null,progress:r}),t=o)}const{index:i,position:e,options:n}=f;try{const r=new li;if(r.setAttribute("position",new ht(e,3,!1)),i&&r.setIndex(new ht(i,1,!1)),n.includedProgressCallback&&(n.onProgress=s),n.groups){const c=n.groups;for(const u in c){const l=c[u];r.addGroup(l.start,l.count,l.materialIndex)}}const o=new Ys(r,n),a=Ys.serialize(o,{copyIndexBuffer:!1});let h=[e.buffer,...a.roots];a.index&&h.push(a.index.buffer),h=h.filter(c=>typeof SharedArrayBuffer>"u"||!(c instanceof SharedArrayBuffer)),o._indirectBuffer&&h.push(a.indirectBuffer.buffer),postMessage({error:null,serialized:a,position:e,progress:1},h)}catch(r){postMessage({error:r,serialized:null,position:null,progress:1})}}})();
